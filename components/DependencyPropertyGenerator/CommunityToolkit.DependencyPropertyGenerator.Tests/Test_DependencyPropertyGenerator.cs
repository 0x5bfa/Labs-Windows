// Licensed to the .NET Foundation under one or more agreements.
// The .NET Foundation licenses this file to you under the MIT license.
// See the LICENSE file in the project root for more information.

using CommunityToolkit.GeneratedDependencyProperty.Tests.Helpers;
using Microsoft.CodeAnalysis.CSharp;
using Microsoft.VisualStudio.TestTools.UnitTesting;

namespace CommunityToolkit.GeneratedDependencyProperty.Tests;

[TestClass]
public partial class Test_DependencyPropertyGenerator
{
    [TestMethod]
    public void SingleProperty_Int32_WithLocalCache()
    {
        const string source = """
            using Windows.UI.Xaml;
            using CommunityToolkit.WinUI;

            namespace MyNamespace;

            public partial class MyControl : DependencyObject
            {
                [GeneratedDependencyProperty(IsLocalCacheEnabled = true)]
                public partial int Number { get; set; }
            }
            """;

        const string result = """
            // <auto-generated/>
            #pragma warning disable
            #nullable enable

            namespace MyNamespace
            {
                /// <inheritdoc cref="MyControl"/>
                partial class MyControl
                {
                    /// <summary>
                    /// The backing <see cref="global::Windows.UI.Xaml.DependencyProperty"/> instance for <see cref="Number"/>.
                    /// </summary>
                    [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.WinUI.DependencyPropertyGenerator", <ASSEMBLY_VERSION>)]
                    public static readonly global::Windows.UI.Xaml.DependencyProperty NumberProperty = global::Windows.UI.Xaml.DependencyProperty.Register(
                        name: "Number",
                        propertyType: typeof(int),
                        ownerType: typeof(MyControl),
                        typeMetadata: new global::Windows.UI.Xaml.PropertyMetadata(default(int)));

                    /// <inheritdoc/>
                    [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.WinUI.DependencyPropertyGenerator", <ASSEMBLY_VERSION>)]
                    [global::System.Diagnostics.DebuggerNonUserCode]
                    [global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
                    public partial int Number
                    {
                        get => field;
                        set
                        {
                            OnNumberSet(ref value);

                            if (global::System.Collections.Generic.EqualityComparer<int>.Default.Equals(field, value))
                            {
                                return;
                            }

                            int __oldValue = field;

                            OnNumberChanging(value);
                            OnNumberChanging(__oldValue, value);

                            field = value;

                            object? __boxedValue = value;

                            OnNumberSet(ref __boxedValue);

                            SetValue(NumberProperty, __boxedValue);

                            OnNumberChanged(value);
                            OnNumberChanged(__oldValue, value);
                        }
                    }

                    /// <summary>Executes the logic for when the <see langword="set"/> accessor <see cref="Number"/> is invoked</summary>
                    /// <param name="propertyValue">The boxed property value that has been produced before assigning to <see cref="NumberProperty"/>.</param>
                    /// <remarks>This method is invoked on the boxed value that is about to be passed to <see cref="SetValue"/> on <see cref="NumberProperty"/>.</remarks>
                    [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.WinUI.DependencyPropertyGenerator", <ASSEMBLY_VERSION>)]
                    partial void OnNumberSet(ref object propertyValue);

                    /// <summary>Executes the logic for when the <see langword="set"/> accessor <see cref="Number"/> is invoked</summary>
                    /// <param name="propertyValue">The property value that is being assigned to <see cref="Number"/>.</param>
                    /// <remarks>This method is invoked on the raw value being assigned to <see cref="Number"/>, before <see cref="SetValue"/> is used.</remarks>
                    [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.WinUI.DependencyPropertyGenerator", <ASSEMBLY_VERSION>)]
                    partial void OnNumberSet(ref int propertyValue);

                    /// <summary>Executes the logic for when <see cref="Number"/> is changing.</summary>
                    /// <param name="value">The new property value being set.</param>
                    /// <remarks>This method is invoked right before the value of <see cref="Number"/> is changed.</remarks>
                    [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.WinUI.DependencyPropertyGenerator", <ASSEMBLY_VERSION>)]
                    partial void OnNumberChanging(int newValue);

                    /// <summary>Executes the logic for when <see cref="Number"/> is changing.</summary>
                    /// <param name="oldValue">The previous property value that is being replaced.</param>
                    /// <param name="newValue">The new property value being set.</param>
                    /// <remarks>This method is invoked right before the value of <see cref="Number"/> is changed.</remarks>
                    [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.WinUI.DependencyPropertyGenerator", <ASSEMBLY_VERSION>)]
                    partial void OnNumberChanging(int oldValue, int newValue);

                    /// <summary>Executes the logic for when <see cref="Number"/> has just changed.</summary>
                    /// <param name="value">The new property value that has been set.</param>
                    /// <remarks>This method is invoked right after the value of <see cref="Number"/> is changed.</remarks>
                    [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.WinUI.DependencyPropertyGenerator", <ASSEMBLY_VERSION>)]
                    partial void OnNumberChanged(int newValue);

                    /// <summary>Executes the logic for when <see cref="Number"/> has just changed.</summary>
                    /// <param name="oldValue">The previous property value that has been replaced.</param>
                    /// <param name="newValue">The new property value that has been set.</param>
                    /// <remarks>This method is invoked right after the value of <see cref="Number"/> is changed.</remarks>
                    [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.WinUI.DependencyPropertyGenerator", <ASSEMBLY_VERSION>)]
                    partial void OnNumberChanged(int oldValue, int newValue);

                    /// <summary>Executes the logic for when <see cref="Number"/> has just changed.</summary>
                    /// <param name="e">Event data that is issued by any event that tracks changes to the effective value of this property.</param>
                    /// <remarks>This method is invoked by the <see cref="global::Windows.UI.Xaml.DependencyProperty"/> infrastructure, after the value of <see cref="Number"/> is changed.</remarks>
                    [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.WinUI.DependencyPropertyGenerator", <ASSEMBLY_VERSION>)]
                    partial void OnNumberPropertyChanged(global::Windows.UI.Xaml.DependencyPropertyChangedEventArgs e);

                    /// <summary>Executes the logic for when any dependency property has just changed.</summary>
                    /// <param name="e">Event data that is issued by any event that tracks changes to the effective value of this property.</param>
                    /// <remarks>This method is invoked by the <see cref="global::Windows.UI.Xaml.DependencyProperty"/> infrastructure, after the value of any dependency property has just changed.</remarks>
                    [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.WinUI.DependencyPropertyGenerator", <ASSEMBLY_VERSION>)]
                    partial void OnPropertyChanged(global::Windows.UI.Xaml.DependencyPropertyChangedEventArgs e);
                }
            }
            """;

        CSharpGeneratorTest<DependencyPropertyGenerator>.VerifySources(source, ("MyNamespace.MyControl.g.cs", result), languageVersion: LanguageVersion.Preview);
    }

    [TestMethod]
    public void SingleProperty_Int32_WithLocalCache_WithCallback()
    {
        const string source = """
            using Windows.UI.Xaml;
            using CommunityToolkit.WinUI;

            namespace MyNamespace;

            public partial class MyControl : DependencyObject
            {
                [GeneratedDependencyProperty(IsLocalCacheEnabled = true)]
                public partial int Number { get; set; }

                partial void OnNumberPropertyChanged(DependencyPropertyChangedEventArgs e)
                {
                }
            }
            """;

        const string result = """
            // <auto-generated/>
            #pragma warning disable
            #nullable enable

            namespace MyNamespace
            {
                /// <inheritdoc cref="MyControl"/>
                partial class MyControl
                {
                    /// <summary>
                    /// The backing <see cref="global::Windows.UI.Xaml.DependencyProperty"/> instance for <see cref="Number"/>.
                    /// </summary>
                    [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.WinUI.DependencyPropertyGenerator", <ASSEMBLY_VERSION>)]
                    public static readonly global::Windows.UI.Xaml.DependencyProperty NumberProperty = global::Windows.UI.Xaml.DependencyProperty.Register(
                        name: "Number",
                        propertyType: typeof(int),
                        ownerType: typeof(MyControl),
                        typeMetadata: new global::Windows.UI.Xaml.PropertyMetadata(
                            defaultValue: default(int),
                            propertyChangedCallback: global::CommunityToolkit.WinUI.DependencyPropertyGenerator.PropertyChangedCallbacks.Number()));

                    /// <inheritdoc/>
                    [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.WinUI.DependencyPropertyGenerator", <ASSEMBLY_VERSION>)]
                    [global::System.Diagnostics.DebuggerNonUserCode]
                    [global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
                    public partial int Number
                    {
                        get => field;
                        set
                        {
                            OnNumberSet(ref value);

                            if (global::System.Collections.Generic.EqualityComparer<int>.Default.Equals(field, value))
                            {
                                return;
                            }

                            int __oldValue = field;

                            OnNumberChanging(value);
                            OnNumberChanging(__oldValue, value);

                            field = value;

                            object? __boxedValue = value;

                            OnNumberSet(ref __boxedValue);

                            SetValue(NumberProperty, __boxedValue);

                            OnNumberChanged(value);
                            OnNumberChanged(__oldValue, value);
                        }
                    }

                    /// <summary>Executes the logic for when the <see langword="set"/> accessor <see cref="Number"/> is invoked</summary>
                    /// <param name="propertyValue">The boxed property value that has been produced before assigning to <see cref="NumberProperty"/>.</param>
                    /// <remarks>This method is invoked on the boxed value that is about to be passed to <see cref="SetValue"/> on <see cref="NumberProperty"/>.</remarks>
                    [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.WinUI.DependencyPropertyGenerator", <ASSEMBLY_VERSION>)]
                    partial void OnNumberSet(ref object propertyValue);

                    /// <summary>Executes the logic for when the <see langword="set"/> accessor <see cref="Number"/> is invoked</summary>
                    /// <param name="propertyValue">The property value that is being assigned to <see cref="Number"/>.</param>
                    /// <remarks>This method is invoked on the raw value being assigned to <see cref="Number"/>, before <see cref="SetValue"/> is used.</remarks>
                    [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.WinUI.DependencyPropertyGenerator", <ASSEMBLY_VERSION>)]
                    partial void OnNumberSet(ref int propertyValue);

                    /// <summary>Executes the logic for when <see cref="Number"/> is changing.</summary>
                    /// <param name="value">The new property value being set.</param>
                    /// <remarks>This method is invoked right before the value of <see cref="Number"/> is changed.</remarks>
                    [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.WinUI.DependencyPropertyGenerator", <ASSEMBLY_VERSION>)]
                    partial void OnNumberChanging(int newValue);

                    /// <summary>Executes the logic for when <see cref="Number"/> is changing.</summary>
                    /// <param name="oldValue">The previous property value that is being replaced.</param>
                    /// <param name="newValue">The new property value being set.</param>
                    /// <remarks>This method is invoked right before the value of <see cref="Number"/> is changed.</remarks>
                    [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.WinUI.DependencyPropertyGenerator", <ASSEMBLY_VERSION>)]
                    partial void OnNumberChanging(int oldValue, int newValue);

                    /// <summary>Executes the logic for when <see cref="Number"/> has just changed.</summary>
                    /// <param name="value">The new property value that has been set.</param>
                    /// <remarks>This method is invoked right after the value of <see cref="Number"/> is changed.</remarks>
                    [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.WinUI.DependencyPropertyGenerator", <ASSEMBLY_VERSION>)]
                    partial void OnNumberChanged(int newValue);

                    /// <summary>Executes the logic for when <see cref="Number"/> has just changed.</summary>
                    /// <param name="oldValue">The previous property value that has been replaced.</param>
                    /// <param name="newValue">The new property value that has been set.</param>
                    /// <remarks>This method is invoked right after the value of <see cref="Number"/> is changed.</remarks>
                    [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.WinUI.DependencyPropertyGenerator", <ASSEMBLY_VERSION>)]
                    partial void OnNumberChanged(int oldValue, int newValue);

                    /// <summary>Executes the logic for when <see cref="Number"/> has just changed.</summary>
                    /// <param name="e">Event data that is issued by any event that tracks changes to the effective value of this property.</param>
                    /// <remarks>This method is invoked by the <see cref="global::Windows.UI.Xaml.DependencyProperty"/> infrastructure, after the value of <see cref="Number"/> is changed.</remarks>
                    [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.WinUI.DependencyPropertyGenerator", <ASSEMBLY_VERSION>)]
                    partial void OnNumberPropertyChanged(global::Windows.UI.Xaml.DependencyPropertyChangedEventArgs e);

                    /// <summary>Executes the logic for when any dependency property has just changed.</summary>
                    /// <param name="e">Event data that is issued by any event that tracks changes to the effective value of this property.</param>
                    /// <remarks>This method is invoked by the <see cref="global::Windows.UI.Xaml.DependencyProperty"/> infrastructure, after the value of any dependency property has just changed.</remarks>
                    [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.WinUI.DependencyPropertyGenerator", <ASSEMBLY_VERSION>)]
                    partial void OnPropertyChanged(global::Windows.UI.Xaml.DependencyPropertyChangedEventArgs e);
                }
            }

            namespace CommunityToolkit.WinUI.DependencyPropertyGenerator
            {
                using global::System.Runtime.CompilerServices;
                using global::Windows.UI.Xaml;

                /// <summary>
                /// Contains shared property changed callbacks for <see cref="MyControl"/>.
                /// </summary>
                [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.WinUI.DependencyPropertyGenerator", <ASSEMBLY_VERSION>)]
                [global::System.Diagnostics.DebuggerNonUserCode]
                [global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
                file static class PropertyChangedCallbacks
                {
                    /// <summary>
                    /// Gets a <see cref="PropertyChangedCallback"/> value for <see cref="global::MyNamespace.MyControl.NumberProperty"/>.
                    /// </summary>
                    /// <returns>The <see cref="PropertyChangedCallback"/> value with the right callbacks.</returns>
                    public static PropertyChangedCallback Number()
                    {
                        static void Invoke(object d, DependencyPropertyChangedEventArgs e)
                        {
                            global::MyNamespace.MyControl __this = (global::MyNamespace.MyControl)d;

                            OnNumberPropertyChanged(__this, e);
                        }

                        return new(Invoke);
                    }

                    /// <inheritdoc cref="global::MyNamespace.MyControl.OnNumberPropertyChanged"/>
                    [UnsafeAccessor(UnsafeAccessorKind.Method, Name = "OnNumberPropertyChanged")]
                    private static extern void OnNumberPropertyChanged(global::MyNamespace.MyControl _, DependencyPropertyChangedEventArgs e);
                }
            }
            """;

        CSharpGeneratorTest<DependencyPropertyGenerator>.VerifySources(source, ("MyNamespace.MyControl.g.cs", result), languageVersion: LanguageVersion.Preview);
    }

    [TestMethod]
    public void SingleProperty_Int32_WithLocalCache_WithDefaultValue()
    {
        const string source = """
            using Windows.UI.Xaml;
            using CommunityToolkit.WinUI;

            namespace MyNamespace;

            public partial class MyControl : DependencyObject
            {
                [GeneratedDependencyProperty(IsLocalCacheEnabled = true, DefaultValue = 42)]
                public partial int Number { get; set; }
            }
            """;

        const string result = """
            // <auto-generated/>
            #pragma warning disable
            #nullable enable

            namespace MyNamespace
            {
                /// <inheritdoc cref="MyControl"/>
                partial class MyControl
                {
                    /// <summary>
                    /// The backing <see cref="global::Windows.UI.Xaml.DependencyProperty"/> instance for <see cref="Number"/>.
                    /// </summary>
                    [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.WinUI.DependencyPropertyGenerator", <ASSEMBLY_VERSION>)]
                    public static readonly global::Windows.UI.Xaml.DependencyProperty NumberProperty = global::Windows.UI.Xaml.DependencyProperty.Register(
                        name: "Number",
                        propertyType: typeof(int),
                        ownerType: typeof(MyControl),
                        typeMetadata: new global::Windows.UI.Xaml.PropertyMetadata(42));

                    /// <inheritdoc/>
                    [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.WinUI.DependencyPropertyGenerator", <ASSEMBLY_VERSION>)]
                    [global::System.Diagnostics.DebuggerNonUserCode]
                    [global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
                    public partial int Number
                    {
                        get => field;
                        set
                        {
                            OnNumberSet(ref value);

                            if (global::System.Collections.Generic.EqualityComparer<int>.Default.Equals(field, value))
                            {
                                return;
                            }

                            int __oldValue = field;

                            OnNumberChanging(value);
                            OnNumberChanging(__oldValue, value);

                            field = value;

                            object? __boxedValue = value;

                            OnNumberSet(ref __boxedValue);

                            SetValue(NumberProperty, __boxedValue);

                            OnNumberChanged(value);
                            OnNumberChanged(__oldValue, value);
                        } = 42;
                    }

                    /// <summary>Executes the logic for when the <see langword="set"/> accessor <see cref="Number"/> is invoked</summary>
                    /// <param name="propertyValue">The boxed property value that has been produced before assigning to <see cref="NumberProperty"/>.</param>
                    /// <remarks>This method is invoked on the boxed value that is about to be passed to <see cref="SetValue"/> on <see cref="NumberProperty"/>.</remarks>
                    [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.WinUI.DependencyPropertyGenerator", <ASSEMBLY_VERSION>)]
                    partial void OnNumberSet(ref object propertyValue);

                    /// <summary>Executes the logic for when the <see langword="set"/> accessor <see cref="Number"/> is invoked</summary>
                    /// <param name="propertyValue">The property value that is being assigned to <see cref="Number"/>.</param>
                    /// <remarks>This method is invoked on the raw value being assigned to <see cref="Number"/>, before <see cref="SetValue"/> is used.</remarks>
                    [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.WinUI.DependencyPropertyGenerator", <ASSEMBLY_VERSION>)]
                    partial void OnNumberSet(ref int propertyValue);

                    /// <summary>Executes the logic for when <see cref="Number"/> is changing.</summary>
                    /// <param name="value">The new property value being set.</param>
                    /// <remarks>This method is invoked right before the value of <see cref="Number"/> is changed.</remarks>
                    [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.WinUI.DependencyPropertyGenerator", <ASSEMBLY_VERSION>)]
                    partial void OnNumberChanging(int newValue);

                    /// <summary>Executes the logic for when <see cref="Number"/> is changing.</summary>
                    /// <param name="oldValue">The previous property value that is being replaced.</param>
                    /// <param name="newValue">The new property value being set.</param>
                    /// <remarks>This method is invoked right before the value of <see cref="Number"/> is changed.</remarks>
                    [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.WinUI.DependencyPropertyGenerator", <ASSEMBLY_VERSION>)]
                    partial void OnNumberChanging(int oldValue, int newValue);

                    /// <summary>Executes the logic for when <see cref="Number"/> has just changed.</summary>
                    /// <param name="value">The new property value that has been set.</param>
                    /// <remarks>This method is invoked right after the value of <see cref="Number"/> is changed.</remarks>
                    [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.WinUI.DependencyPropertyGenerator", <ASSEMBLY_VERSION>)]
                    partial void OnNumberChanged(int newValue);

                    /// <summary>Executes the logic for when <see cref="Number"/> has just changed.</summary>
                    /// <param name="oldValue">The previous property value that has been replaced.</param>
                    /// <param name="newValue">The new property value that has been set.</param>
                    /// <remarks>This method is invoked right after the value of <see cref="Number"/> is changed.</remarks>
                    [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.WinUI.DependencyPropertyGenerator", <ASSEMBLY_VERSION>)]
                    partial void OnNumberChanged(int oldValue, int newValue);

                    /// <summary>Executes the logic for when <see cref="Number"/> has just changed.</summary>
                    /// <param name="e">Event data that is issued by any event that tracks changes to the effective value of this property.</param>
                    /// <remarks>This method is invoked by the <see cref="global::Windows.UI.Xaml.DependencyProperty"/> infrastructure, after the value of <see cref="Number"/> is changed.</remarks>
                    [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.WinUI.DependencyPropertyGenerator", <ASSEMBLY_VERSION>)]
                    partial void OnNumberPropertyChanged(global::Windows.UI.Xaml.DependencyPropertyChangedEventArgs e);

                    /// <summary>Executes the logic for when any dependency property has just changed.</summary>
                    /// <param name="e">Event data that is issued by any event that tracks changes to the effective value of this property.</param>
                    /// <remarks>This method is invoked by the <see cref="global::Windows.UI.Xaml.DependencyProperty"/> infrastructure, after the value of any dependency property has just changed.</remarks>
                    [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.WinUI.DependencyPropertyGenerator", <ASSEMBLY_VERSION>)]
                    partial void OnPropertyChanged(global::Windows.UI.Xaml.DependencyPropertyChangedEventArgs e);
                }
            }
            """;

        CSharpGeneratorTest<DependencyPropertyGenerator>.VerifySources(source, ("MyNamespace.MyControl.g.cs", result), languageVersion: LanguageVersion.Preview);
    }

    [TestMethod]
    public void SingleProperty_Int32_WithNoCaching()
    {
        const string source = """
            using Windows.UI.Xaml;
            using CommunityToolkit.WinUI;

            namespace MyNamespace;

            public partial class MyControl : DependencyObject
            {
                [GeneratedDependencyProperty]
                public partial int Number { get; set; }
            }
            """;

        const string result = """
            // <auto-generated/>
            #pragma warning disable
            #nullable enable

            namespace MyNamespace
            {
                /// <inheritdoc cref="MyControl"/>
                partial class MyControl
                {
                    /// <summary>
                    /// The backing <see cref="global::Windows.UI.Xaml.DependencyProperty"/> instance for <see cref="Number"/>.
                    /// </summary>
                    [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.WinUI.DependencyPropertyGenerator", <ASSEMBLY_VERSION>)]
                    public static readonly global::Windows.UI.Xaml.DependencyProperty NumberProperty = global::Windows.UI.Xaml.DependencyProperty.Register(
                        name: "Number",
                        propertyType: typeof(int),
                        ownerType: typeof(MyControl),
                        typeMetadata: new global::Windows.UI.Xaml.PropertyMetadata(default(int)));

                    /// <inheritdoc/>
                    [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.WinUI.DependencyPropertyGenerator", <ASSEMBLY_VERSION>)]
                    [global::System.Diagnostics.DebuggerNonUserCode]
                    [global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
                    public partial int Number
                    {
                        get
                        {
                            object? __boxedValue = GetValue(NumberProperty);

                            OnNumberGet(ref __boxedValue);

                            int __unboxedValue = (int)__boxedValue;

                            OnNumberGet(ref __unboxedValue);

                            return __unboxedValue;
                        }
                        set
                        {
                            OnNumberSet(ref value);

                            object? __boxedValue = value;

                            OnNumberSet(ref __boxedValue);

                            SetValue(NumberProperty, __boxedValue);

                            OnNumberChanged(value);
                        }
                    }

                    /// <summary>Executes the logic for when the <see langword="get"/> accessor <see cref="Number"/> is invoked</summary>
                    /// <param name="propertyValue">The raw property value that has been retrieved from <see cref="NumberProperty"/>.</param>
                    /// <remarks>This method is invoked on the boxed value retrieved via <see cref="GetValue"/> on <see cref="NumberProperty"/>.</remarks>
                    [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.WinUI.DependencyPropertyGenerator", <ASSEMBLY_VERSION>)]
                    partial void OnNumberGet(ref object propertyValue);

                    /// <summary>Executes the logic for when the <see langword="get"/> accessor <see cref="Number"/> is invoked</summary>
                    /// <param name="propertyValue">The unboxed property value that has been retrieved from <see cref="NumberProperty"/>.</param>
                    /// <remarks>This method is invoked on the unboxed value retrieved via <see cref="GetValue"/> on <see cref="NumberProperty"/>.</remarks>
                    [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.WinUI.DependencyPropertyGenerator", <ASSEMBLY_VERSION>)]
                    partial void OnNumberGet(ref int propertyValue);

                    /// <summary>Executes the logic for when the <see langword="set"/> accessor <see cref="Number"/> is invoked</summary>
                    /// <param name="propertyValue">The boxed property value that has been produced before assigning to <see cref="NumberProperty"/>.</param>
                    /// <remarks>This method is invoked on the boxed value that is about to be passed to <see cref="SetValue"/> on <see cref="NumberProperty"/>.</remarks>
                    [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.WinUI.DependencyPropertyGenerator", <ASSEMBLY_VERSION>)]
                    partial void OnNumberSet(ref object propertyValue);

                    /// <summary>Executes the logic for when the <see langword="set"/> accessor <see cref="Number"/> is invoked</summary>
                    /// <param name="propertyValue">The property value that is being assigned to <see cref="Number"/>.</param>
                    /// <remarks>This method is invoked on the raw value being assigned to <see cref="Number"/>, before <see cref="SetValue"/> is used.</remarks>
                    [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.WinUI.DependencyPropertyGenerator", <ASSEMBLY_VERSION>)]
                    partial void OnNumberSet(ref int propertyValue);

                    /// <summary>Executes the logic for when <see cref="Number"/> has just changed.</summary>
                    /// <param name="value">The new property value that has been set.</param>
                    /// <remarks>This method is invoked right after the value of <see cref="Number"/> is changed.</remarks>
                    [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.WinUI.DependencyPropertyGenerator", <ASSEMBLY_VERSION>)]
                    partial void OnNumberChanged(int newValue);

                    /// <summary>Executes the logic for when <see cref="Number"/> has just changed.</summary>
                    /// <param name="e">Event data that is issued by any event that tracks changes to the effective value of this property.</param>
                    /// <remarks>This method is invoked by the <see cref="global::Windows.UI.Xaml.DependencyProperty"/> infrastructure, after the value of <see cref="Number"/> is changed.</remarks>
                    [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.WinUI.DependencyPropertyGenerator", <ASSEMBLY_VERSION>)]
                    partial void OnNumberPropertyChanged(global::Windows.UI.Xaml.DependencyPropertyChangedEventArgs e);

                    /// <summary>Executes the logic for when any dependency property has just changed.</summary>
                    /// <param name="e">Event data that is issued by any event that tracks changes to the effective value of this property.</param>
                    /// <remarks>This method is invoked by the <see cref="global::Windows.UI.Xaml.DependencyProperty"/> infrastructure, after the value of any dependency property has just changed.</remarks>
                    [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.WinUI.DependencyPropertyGenerator", <ASSEMBLY_VERSION>)]
                    partial void OnPropertyChanged(global::Windows.UI.Xaml.DependencyPropertyChangedEventArgs e);
                }
            }
            """;

        CSharpGeneratorTest<DependencyPropertyGenerator>.VerifySources(source, ("MyNamespace.MyControl.g.cs", result), languageVersion: LanguageVersion.Preview);
    }

    [TestMethod]
    public void SingleProperty_Int32_WithNoCaching_UnsetValue()
    {
        const string source = """
            using Windows.UI.Xaml;
            using CommunityToolkit.WinUI;

            namespace MyNamespace;

            public partial class MyControl : DependencyObject
            {
                [GeneratedDependencyProperty(DefaultValue = GeneratedDependencyProperty.UnsetValue)]
                public partial int Number { get; set; }
            }
            """;

        const string result = """
            // <auto-generated/>
            #pragma warning disable
            #nullable enable

            namespace MyNamespace
            {
                /// <inheritdoc cref="MyControl"/>
                partial class MyControl
                {
                    /// <summary>
                    /// The backing <see cref="global::Windows.UI.Xaml.DependencyProperty"/> instance for <see cref="Number"/>.
                    /// </summary>
                    [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.WinUI.DependencyPropertyGenerator", <ASSEMBLY_VERSION>)]
                    public static readonly global::Windows.UI.Xaml.DependencyProperty NumberProperty = global::Windows.UI.Xaml.DependencyProperty.Register(
                        name: "Number",
                        propertyType: typeof(int),
                        ownerType: typeof(MyControl),
                        typeMetadata: new global::Windows.UI.Xaml.PropertyMetadata(global::Windows.UI.Xaml.DependencyProperty.UnsetValue));

                    /// <inheritdoc/>
                    [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.WinUI.DependencyPropertyGenerator", <ASSEMBLY_VERSION>)]
                    [global::System.Diagnostics.DebuggerNonUserCode]
                    [global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
                    public partial int Number
                    {
                        get
                        {
                            object? __boxedValue = GetValue(NumberProperty);

                            OnNumberGet(ref __boxedValue);

                            int __unboxedValue = (int)__boxedValue;

                            OnNumberGet(ref __unboxedValue);

                            return __unboxedValue;
                        }
                        set
                        {
                            OnNumberSet(ref value);

                            object? __boxedValue = value;

                            OnNumberSet(ref __boxedValue);

                            SetValue(NumberProperty, __boxedValue);

                            OnNumberChanged(value);
                        }
                    }

                    /// <summary>Executes the logic for when the <see langword="get"/> accessor <see cref="Number"/> is invoked</summary>
                    /// <param name="propertyValue">The raw property value that has been retrieved from <see cref="NumberProperty"/>.</param>
                    /// <remarks>This method is invoked on the boxed value retrieved via <see cref="GetValue"/> on <see cref="NumberProperty"/>.</remarks>
                    [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.WinUI.DependencyPropertyGenerator", <ASSEMBLY_VERSION>)]
                    partial void OnNumberGet(ref object propertyValue);

                    /// <summary>Executes the logic for when the <see langword="get"/> accessor <see cref="Number"/> is invoked</summary>
                    /// <param name="propertyValue">The unboxed property value that has been retrieved from <see cref="NumberProperty"/>.</param>
                    /// <remarks>This method is invoked on the unboxed value retrieved via <see cref="GetValue"/> on <see cref="NumberProperty"/>.</remarks>
                    [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.WinUI.DependencyPropertyGenerator", <ASSEMBLY_VERSION>)]
                    partial void OnNumberGet(ref int propertyValue);

                    /// <summary>Executes the logic for when the <see langword="set"/> accessor <see cref="Number"/> is invoked</summary>
                    /// <param name="propertyValue">The boxed property value that has been produced before assigning to <see cref="NumberProperty"/>.</param>
                    /// <remarks>This method is invoked on the boxed value that is about to be passed to <see cref="SetValue"/> on <see cref="NumberProperty"/>.</remarks>
                    [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.WinUI.DependencyPropertyGenerator", <ASSEMBLY_VERSION>)]
                    partial void OnNumberSet(ref object propertyValue);

                    /// <summary>Executes the logic for when the <see langword="set"/> accessor <see cref="Number"/> is invoked</summary>
                    /// <param name="propertyValue">The property value that is being assigned to <see cref="Number"/>.</param>
                    /// <remarks>This method is invoked on the raw value being assigned to <see cref="Number"/>, before <see cref="SetValue"/> is used.</remarks>
                    [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.WinUI.DependencyPropertyGenerator", <ASSEMBLY_VERSION>)]
                    partial void OnNumberSet(ref int propertyValue);

                    /// <summary>Executes the logic for when <see cref="Number"/> has just changed.</summary>
                    /// <param name="value">The new property value that has been set.</param>
                    /// <remarks>This method is invoked right after the value of <see cref="Number"/> is changed.</remarks>
                    [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.WinUI.DependencyPropertyGenerator", <ASSEMBLY_VERSION>)]
                    partial void OnNumberChanged(int newValue);

                    /// <summary>Executes the logic for when <see cref="Number"/> has just changed.</summary>
                    /// <param name="e">Event data that is issued by any event that tracks changes to the effective value of this property.</param>
                    /// <remarks>This method is invoked by the <see cref="global::Windows.UI.Xaml.DependencyProperty"/> infrastructure, after the value of <see cref="Number"/> is changed.</remarks>
                    [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.WinUI.DependencyPropertyGenerator", <ASSEMBLY_VERSION>)]
                    partial void OnNumberPropertyChanged(global::Windows.UI.Xaml.DependencyPropertyChangedEventArgs e);

                    /// <summary>Executes the logic for when any dependency property has just changed.</summary>
                    /// <param name="e">Event data that is issued by any event that tracks changes to the effective value of this property.</param>
                    /// <remarks>This method is invoked by the <see cref="global::Windows.UI.Xaml.DependencyProperty"/> infrastructure, after the value of any dependency property has just changed.</remarks>
                    [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.WinUI.DependencyPropertyGenerator", <ASSEMBLY_VERSION>)]
                    partial void OnPropertyChanged(global::Windows.UI.Xaml.DependencyPropertyChangedEventArgs e);
                }
            }
            """;

        CSharpGeneratorTest<DependencyPropertyGenerator>.VerifySources(source, ("MyNamespace.MyControl.g.cs", result), languageVersion: LanguageVersion.Preview);
    }

    [TestMethod]
    public void SingleProperty_Int32_WithNoCaching_WithCallback()
    {
        const string source = """
            using Windows.UI.Xaml;
            using CommunityToolkit.WinUI;

            namespace MyNamespace;

            public partial class MyControl : DependencyObject
            {
                [GeneratedDependencyProperty]
                public partial int Number { get; set; }

                partial void OnNumberPropertyChanged(DependencyPropertyChangedEventArgs e)
                {
                }
            }
            """;

        const string result = """
            // <auto-generated/>
            #pragma warning disable
            #nullable enable

            namespace MyNamespace
            {
                /// <inheritdoc cref="MyControl"/>
                partial class MyControl
                {
                    /// <summary>
                    /// The backing <see cref="global::Windows.UI.Xaml.DependencyProperty"/> instance for <see cref="Number"/>.
                    /// </summary>
                    [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.WinUI.DependencyPropertyGenerator", <ASSEMBLY_VERSION>)]
                    public static readonly global::Windows.UI.Xaml.DependencyProperty NumberProperty = global::Windows.UI.Xaml.DependencyProperty.Register(
                        name: "Number",
                        propertyType: typeof(int),
                        ownerType: typeof(MyControl),
                        typeMetadata: new global::Windows.UI.Xaml.PropertyMetadata(
                            defaultValue: default(int),
                            propertyChangedCallback: global::CommunityToolkit.WinUI.DependencyPropertyGenerator.PropertyChangedCallbacks.Number()));

                    /// <inheritdoc/>
                    [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.WinUI.DependencyPropertyGenerator", <ASSEMBLY_VERSION>)]
                    [global::System.Diagnostics.DebuggerNonUserCode]
                    [global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
                    public partial int Number
                    {
                        get
                        {
                            object? __boxedValue = GetValue(NumberProperty);

                            OnNumberGet(ref __boxedValue);

                            int __unboxedValue = (int)__boxedValue;

                            OnNumberGet(ref __unboxedValue);

                            return __unboxedValue;
                        }
                        set
                        {
                            OnNumberSet(ref value);

                            object? __boxedValue = value;

                            OnNumberSet(ref __boxedValue);

                            SetValue(NumberProperty, __boxedValue);

                            OnNumberChanged(value);
                        }
                    }

                    /// <summary>Executes the logic for when the <see langword="get"/> accessor <see cref="Number"/> is invoked</summary>
                    /// <param name="propertyValue">The raw property value that has been retrieved from <see cref="NumberProperty"/>.</param>
                    /// <remarks>This method is invoked on the boxed value retrieved via <see cref="GetValue"/> on <see cref="NumberProperty"/>.</remarks>
                    [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.WinUI.DependencyPropertyGenerator", <ASSEMBLY_VERSION>)]
                    partial void OnNumberGet(ref object propertyValue);

                    /// <summary>Executes the logic for when the <see langword="get"/> accessor <see cref="Number"/> is invoked</summary>
                    /// <param name="propertyValue">The unboxed property value that has been retrieved from <see cref="NumberProperty"/>.</param>
                    /// <remarks>This method is invoked on the unboxed value retrieved via <see cref="GetValue"/> on <see cref="NumberProperty"/>.</remarks>
                    [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.WinUI.DependencyPropertyGenerator", <ASSEMBLY_VERSION>)]
                    partial void OnNumberGet(ref int propertyValue);

                    /// <summary>Executes the logic for when the <see langword="set"/> accessor <see cref="Number"/> is invoked</summary>
                    /// <param name="propertyValue">The boxed property value that has been produced before assigning to <see cref="NumberProperty"/>.</param>
                    /// <remarks>This method is invoked on the boxed value that is about to be passed to <see cref="SetValue"/> on <see cref="NumberProperty"/>.</remarks>
                    [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.WinUI.DependencyPropertyGenerator", <ASSEMBLY_VERSION>)]
                    partial void OnNumberSet(ref object propertyValue);

                    /// <summary>Executes the logic for when the <see langword="set"/> accessor <see cref="Number"/> is invoked</summary>
                    /// <param name="propertyValue">The property value that is being assigned to <see cref="Number"/>.</param>
                    /// <remarks>This method is invoked on the raw value being assigned to <see cref="Number"/>, before <see cref="SetValue"/> is used.</remarks>
                    [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.WinUI.DependencyPropertyGenerator", <ASSEMBLY_VERSION>)]
                    partial void OnNumberSet(ref int propertyValue);

                    /// <summary>Executes the logic for when <see cref="Number"/> has just changed.</summary>
                    /// <param name="value">The new property value that has been set.</param>
                    /// <remarks>This method is invoked right after the value of <see cref="Number"/> is changed.</remarks>
                    [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.WinUI.DependencyPropertyGenerator", <ASSEMBLY_VERSION>)]
                    partial void OnNumberChanged(int newValue);

                    /// <summary>Executes the logic for when <see cref="Number"/> has just changed.</summary>
                    /// <param name="e">Event data that is issued by any event that tracks changes to the effective value of this property.</param>
                    /// <remarks>This method is invoked by the <see cref="global::Windows.UI.Xaml.DependencyProperty"/> infrastructure, after the value of <see cref="Number"/> is changed.</remarks>
                    [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.WinUI.DependencyPropertyGenerator", <ASSEMBLY_VERSION>)]
                    partial void OnNumberPropertyChanged(global::Windows.UI.Xaml.DependencyPropertyChangedEventArgs e);

                    /// <summary>Executes the logic for when any dependency property has just changed.</summary>
                    /// <param name="e">Event data that is issued by any event that tracks changes to the effective value of this property.</param>
                    /// <remarks>This method is invoked by the <see cref="global::Windows.UI.Xaml.DependencyProperty"/> infrastructure, after the value of any dependency property has just changed.</remarks>
                    [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.WinUI.DependencyPropertyGenerator", <ASSEMBLY_VERSION>)]
                    partial void OnPropertyChanged(global::Windows.UI.Xaml.DependencyPropertyChangedEventArgs e);
                }
            }

            namespace CommunityToolkit.WinUI.DependencyPropertyGenerator
            {
                using global::System.Runtime.CompilerServices;
                using global::Windows.UI.Xaml;

                /// <summary>
                /// Contains shared property changed callbacks for <see cref="MyControl"/>.
                /// </summary>
                [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.WinUI.DependencyPropertyGenerator", <ASSEMBLY_VERSION>)]
                [global::System.Diagnostics.DebuggerNonUserCode]
                [global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
                file static class PropertyChangedCallbacks
                {
                    /// <summary>
                    /// Gets a <see cref="PropertyChangedCallback"/> value for <see cref="global::MyNamespace.MyControl.NumberProperty"/>.
                    /// </summary>
                    /// <returns>The <see cref="PropertyChangedCallback"/> value with the right callbacks.</returns>
                    public static PropertyChangedCallback Number()
                    {
                        static void Invoke(object d, DependencyPropertyChangedEventArgs e)
                        {
                            global::MyNamespace.MyControl __this = (global::MyNamespace.MyControl)d;

                            OnNumberPropertyChanged(__this, e);
                        }

                        return new(Invoke);
                    }

                    /// <inheritdoc cref="global::MyNamespace.MyControl.OnNumberPropertyChanged"/>
                    [UnsafeAccessor(UnsafeAccessorKind.Method, Name = "OnNumberPropertyChanged")]
                    private static extern void OnNumberPropertyChanged(global::MyNamespace.MyControl _, DependencyPropertyChangedEventArgs e);
                }
            }
            """;

        CSharpGeneratorTest<DependencyPropertyGenerator>.VerifySources(source, ("MyNamespace.MyControl.g.cs", result), languageVersion: LanguageVersion.Preview);
    }

    [TestMethod]
    public void SingleProperty_Int32_WithNoCaching_WithDefaultValue()
    {
        const string source = """
            using Windows.UI.Xaml;
            using CommunityToolkit.WinUI;

            namespace MyNamespace;

            public partial class MyControl : DependencyObject
            {
                [GeneratedDependencyProperty(DefaultValue = 42)]
                public partial int Number { get; set; }
            }
            """;

        const string result = """
            // <auto-generated/>
            #pragma warning disable
            #nullable enable

            namespace MyNamespace
            {
                /// <inheritdoc cref="MyControl"/>
                partial class MyControl
                {
                    /// <summary>
                    /// The backing <see cref="global::Windows.UI.Xaml.DependencyProperty"/> instance for <see cref="Number"/>.
                    /// </summary>
                    [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.WinUI.DependencyPropertyGenerator", <ASSEMBLY_VERSION>)]
                    public static readonly global::Windows.UI.Xaml.DependencyProperty NumberProperty = global::Windows.UI.Xaml.DependencyProperty.Register(
                        name: "Number",
                        propertyType: typeof(int),
                        ownerType: typeof(MyControl),
                        typeMetadata: new global::Windows.UI.Xaml.PropertyMetadata(42));

                    /// <inheritdoc/>
                    [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.WinUI.DependencyPropertyGenerator", <ASSEMBLY_VERSION>)]
                    [global::System.Diagnostics.DebuggerNonUserCode]
                    [global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
                    public partial int Number
                    {
                        get
                        {
                            object? __boxedValue = GetValue(NumberProperty);

                            OnNumberGet(ref __boxedValue);

                            int __unboxedValue = (int)__boxedValue;

                            OnNumberGet(ref __unboxedValue);

                            return __unboxedValue;
                        }
                        set
                        {
                            OnNumberSet(ref value);

                            object? __boxedValue = value;

                            OnNumberSet(ref __boxedValue);

                            SetValue(NumberProperty, __boxedValue);

                            OnNumberChanged(value);
                        }
                    }

                    /// <summary>Executes the logic for when the <see langword="get"/> accessor <see cref="Number"/> is invoked</summary>
                    /// <param name="propertyValue">The raw property value that has been retrieved from <see cref="NumberProperty"/>.</param>
                    /// <remarks>This method is invoked on the boxed value retrieved via <see cref="GetValue"/> on <see cref="NumberProperty"/>.</remarks>
                    [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.WinUI.DependencyPropertyGenerator", <ASSEMBLY_VERSION>)]
                    partial void OnNumberGet(ref object propertyValue);

                    /// <summary>Executes the logic for when the <see langword="get"/> accessor <see cref="Number"/> is invoked</summary>
                    /// <param name="propertyValue">The unboxed property value that has been retrieved from <see cref="NumberProperty"/>.</param>
                    /// <remarks>This method is invoked on the unboxed value retrieved via <see cref="GetValue"/> on <see cref="NumberProperty"/>.</remarks>
                    [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.WinUI.DependencyPropertyGenerator", <ASSEMBLY_VERSION>)]
                    partial void OnNumberGet(ref int propertyValue);

                    /// <summary>Executes the logic for when the <see langword="set"/> accessor <see cref="Number"/> is invoked</summary>
                    /// <param name="propertyValue">The boxed property value that has been produced before assigning to <see cref="NumberProperty"/>.</param>
                    /// <remarks>This method is invoked on the boxed value that is about to be passed to <see cref="SetValue"/> on <see cref="NumberProperty"/>.</remarks>
                    [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.WinUI.DependencyPropertyGenerator", <ASSEMBLY_VERSION>)]
                    partial void OnNumberSet(ref object propertyValue);

                    /// <summary>Executes the logic for when the <see langword="set"/> accessor <see cref="Number"/> is invoked</summary>
                    /// <param name="propertyValue">The property value that is being assigned to <see cref="Number"/>.</param>
                    /// <remarks>This method is invoked on the raw value being assigned to <see cref="Number"/>, before <see cref="SetValue"/> is used.</remarks>
                    [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.WinUI.DependencyPropertyGenerator", <ASSEMBLY_VERSION>)]
                    partial void OnNumberSet(ref int propertyValue);

                    /// <summary>Executes the logic for when <see cref="Number"/> has just changed.</summary>
                    /// <param name="value">The new property value that has been set.</param>
                    /// <remarks>This method is invoked right after the value of <see cref="Number"/> is changed.</remarks>
                    [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.WinUI.DependencyPropertyGenerator", <ASSEMBLY_VERSION>)]
                    partial void OnNumberChanged(int newValue);

                    /// <summary>Executes the logic for when <see cref="Number"/> has just changed.</summary>
                    /// <param name="e">Event data that is issued by any event that tracks changes to the effective value of this property.</param>
                    /// <remarks>This method is invoked by the <see cref="global::Windows.UI.Xaml.DependencyProperty"/> infrastructure, after the value of <see cref="Number"/> is changed.</remarks>
                    [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.WinUI.DependencyPropertyGenerator", <ASSEMBLY_VERSION>)]
                    partial void OnNumberPropertyChanged(global::Windows.UI.Xaml.DependencyPropertyChangedEventArgs e);

                    /// <summary>Executes the logic for when any dependency property has just changed.</summary>
                    /// <param name="e">Event data that is issued by any event that tracks changes to the effective value of this property.</param>
                    /// <remarks>This method is invoked by the <see cref="global::Windows.UI.Xaml.DependencyProperty"/> infrastructure, after the value of any dependency property has just changed.</remarks>
                    [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.WinUI.DependencyPropertyGenerator", <ASSEMBLY_VERSION>)]
                    partial void OnPropertyChanged(global::Windows.UI.Xaml.DependencyPropertyChangedEventArgs e);
                }
            }
            """;

        CSharpGeneratorTest<DependencyPropertyGenerator>.VerifySources(source, ("MyNamespace.MyControl.g.cs", result), languageVersion: LanguageVersion.Preview);
    }

    [TestMethod]
    public void SingleProperty_Int32_WithNoCaching_WithDefaultValue_WithCallback()
    {
        const string source = """
            using Windows.UI.Xaml;
            using CommunityToolkit.WinUI;

            namespace MyNamespace;

            public partial class MyControl : DependencyObject
            {
                [GeneratedDependencyProperty(DefaultValue = 42)]
                public partial int Number { get; set; }

                partial void OnNumberPropertyChanged(DependencyPropertyChangedEventArgs e)
                {
                }
            }
            """;

        const string result = """
            // <auto-generated/>
            #pragma warning disable
            #nullable enable

            namespace MyNamespace
            {
                /// <inheritdoc cref="MyControl"/>
                partial class MyControl
                {
                    /// <summary>
                    /// The backing <see cref="global::Windows.UI.Xaml.DependencyProperty"/> instance for <see cref="Number"/>.
                    /// </summary>
                    [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.WinUI.DependencyPropertyGenerator", <ASSEMBLY_VERSION>)]
                    public static readonly global::Windows.UI.Xaml.DependencyProperty NumberProperty = global::Windows.UI.Xaml.DependencyProperty.Register(
                        name: "Number",
                        propertyType: typeof(int),
                        ownerType: typeof(MyControl),
                        typeMetadata: new global::Windows.UI.Xaml.PropertyMetadata(
                            defaultValue: 42,
                            propertyChangedCallback: global::CommunityToolkit.WinUI.DependencyPropertyGenerator.PropertyChangedCallbacks.Number()));

                    /// <inheritdoc/>
                    [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.WinUI.DependencyPropertyGenerator", <ASSEMBLY_VERSION>)]
                    [global::System.Diagnostics.DebuggerNonUserCode]
                    [global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
                    public partial int Number
                    {
                        get
                        {
                            object? __boxedValue = GetValue(NumberProperty);

                            OnNumberGet(ref __boxedValue);

                            int __unboxedValue = (int)__boxedValue;

                            OnNumberGet(ref __unboxedValue);

                            return __unboxedValue;
                        }
                        set
                        {
                            OnNumberSet(ref value);

                            object? __boxedValue = value;

                            OnNumberSet(ref __boxedValue);

                            SetValue(NumberProperty, __boxedValue);

                            OnNumberChanged(value);
                        }
                    }

                    /// <summary>Executes the logic for when the <see langword="get"/> accessor <see cref="Number"/> is invoked</summary>
                    /// <param name="propertyValue">The raw property value that has been retrieved from <see cref="NumberProperty"/>.</param>
                    /// <remarks>This method is invoked on the boxed value retrieved via <see cref="GetValue"/> on <see cref="NumberProperty"/>.</remarks>
                    [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.WinUI.DependencyPropertyGenerator", <ASSEMBLY_VERSION>)]
                    partial void OnNumberGet(ref object propertyValue);

                    /// <summary>Executes the logic for when the <see langword="get"/> accessor <see cref="Number"/> is invoked</summary>
                    /// <param name="propertyValue">The unboxed property value that has been retrieved from <see cref="NumberProperty"/>.</param>
                    /// <remarks>This method is invoked on the unboxed value retrieved via <see cref="GetValue"/> on <see cref="NumberProperty"/>.</remarks>
                    [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.WinUI.DependencyPropertyGenerator", <ASSEMBLY_VERSION>)]
                    partial void OnNumberGet(ref int propertyValue);

                    /// <summary>Executes the logic for when the <see langword="set"/> accessor <see cref="Number"/> is invoked</summary>
                    /// <param name="propertyValue">The boxed property value that has been produced before assigning to <see cref="NumberProperty"/>.</param>
                    /// <remarks>This method is invoked on the boxed value that is about to be passed to <see cref="SetValue"/> on <see cref="NumberProperty"/>.</remarks>
                    [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.WinUI.DependencyPropertyGenerator", <ASSEMBLY_VERSION>)]
                    partial void OnNumberSet(ref object propertyValue);

                    /// <summary>Executes the logic for when the <see langword="set"/> accessor <see cref="Number"/> is invoked</summary>
                    /// <param name="propertyValue">The property value that is being assigned to <see cref="Number"/>.</param>
                    /// <remarks>This method is invoked on the raw value being assigned to <see cref="Number"/>, before <see cref="SetValue"/> is used.</remarks>
                    [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.WinUI.DependencyPropertyGenerator", <ASSEMBLY_VERSION>)]
                    partial void OnNumberSet(ref int propertyValue);

                    /// <summary>Executes the logic for when <see cref="Number"/> has just changed.</summary>
                    /// <param name="value">The new property value that has been set.</param>
                    /// <remarks>This method is invoked right after the value of <see cref="Number"/> is changed.</remarks>
                    [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.WinUI.DependencyPropertyGenerator", <ASSEMBLY_VERSION>)]
                    partial void OnNumberChanged(int newValue);

                    /// <summary>Executes the logic for when <see cref="Number"/> has just changed.</summary>
                    /// <param name="e">Event data that is issued by any event that tracks changes to the effective value of this property.</param>
                    /// <remarks>This method is invoked by the <see cref="global::Windows.UI.Xaml.DependencyProperty"/> infrastructure, after the value of <see cref="Number"/> is changed.</remarks>
                    [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.WinUI.DependencyPropertyGenerator", <ASSEMBLY_VERSION>)]
                    partial void OnNumberPropertyChanged(global::Windows.UI.Xaml.DependencyPropertyChangedEventArgs e);

                    /// <summary>Executes the logic for when any dependency property has just changed.</summary>
                    /// <param name="e">Event data that is issued by any event that tracks changes to the effective value of this property.</param>
                    /// <remarks>This method is invoked by the <see cref="global::Windows.UI.Xaml.DependencyProperty"/> infrastructure, after the value of any dependency property has just changed.</remarks>
                    [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.WinUI.DependencyPropertyGenerator", <ASSEMBLY_VERSION>)]
                    partial void OnPropertyChanged(global::Windows.UI.Xaml.DependencyPropertyChangedEventArgs e);
                }
            }

            namespace CommunityToolkit.WinUI.DependencyPropertyGenerator
            {
                using global::System.Runtime.CompilerServices;
                using global::Windows.UI.Xaml;

                /// <summary>
                /// Contains shared property changed callbacks for <see cref="MyControl"/>.
                /// </summary>
                [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.WinUI.DependencyPropertyGenerator", <ASSEMBLY_VERSION>)]
                [global::System.Diagnostics.DebuggerNonUserCode]
                [global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
                file static class PropertyChangedCallbacks
                {
                    /// <summary>
                    /// Gets a <see cref="PropertyChangedCallback"/> value for <see cref="global::MyNamespace.MyControl.NumberProperty"/>.
                    /// </summary>
                    /// <returns>The <see cref="PropertyChangedCallback"/> value with the right callbacks.</returns>
                    public static PropertyChangedCallback Number()
                    {
                        static void Invoke(object d, DependencyPropertyChangedEventArgs e)
                        {
                            global::MyNamespace.MyControl __this = (global::MyNamespace.MyControl)d;

                            OnNumberPropertyChanged(__this, e);
                        }

                        return new(Invoke);
                    }

                    /// <inheritdoc cref="global::MyNamespace.MyControl.OnNumberPropertyChanged"/>
                    [UnsafeAccessor(UnsafeAccessorKind.Method, Name = "OnNumberPropertyChanged")]
                    private static extern void OnNumberPropertyChanged(global::MyNamespace.MyControl _, DependencyPropertyChangedEventArgs e);
                }
            }
            """;

        CSharpGeneratorTest<DependencyPropertyGenerator>.VerifySources(source, ("MyNamespace.MyControl.g.cs", result), languageVersion: LanguageVersion.Preview);
    }

    [TestMethod]
    public void SingleProperty_Int32_WithNoCaching_WithSharedCallback()
    {
        const string source = """
            using Windows.UI.Xaml;
            using CommunityToolkit.WinUI;

            namespace MyNamespace;

            public partial class MyControl : DependencyObject
            {
                [GeneratedDependencyProperty]
                public partial int Number { get; set; }

                partial void OnPropertyChanged(DependencyPropertyChangedEventArgs e)
                {
                }
            }
            """;

        const string result = """
            // <auto-generated/>
            #pragma warning disable
            #nullable enable

            namespace MyNamespace
            {
                /// <inheritdoc cref="MyControl"/>
                partial class MyControl
                {
                    /// <summary>
                    /// The backing <see cref="global::Windows.UI.Xaml.DependencyProperty"/> instance for <see cref="Number"/>.
                    /// </summary>
                    [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.WinUI.DependencyPropertyGenerator", <ASSEMBLY_VERSION>)]
                    public static readonly global::Windows.UI.Xaml.DependencyProperty NumberProperty = global::Windows.UI.Xaml.DependencyProperty.Register(
                        name: "Number",
                        propertyType: typeof(int),
                        ownerType: typeof(MyControl),
                        typeMetadata: new global::Windows.UI.Xaml.PropertyMetadata(
                            defaultValue: default(int),
                            propertyChangedCallback: global::CommunityToolkit.WinUI.DependencyPropertyGenerator.PropertyChangedCallbacks.Number()));

                    /// <inheritdoc/>
                    [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.WinUI.DependencyPropertyGenerator", <ASSEMBLY_VERSION>)]
                    [global::System.Diagnostics.DebuggerNonUserCode]
                    [global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
                    public partial int Number
                    {
                        get
                        {
                            object? __boxedValue = GetValue(NumberProperty);

                            OnNumberGet(ref __boxedValue);

                            int __unboxedValue = (int)__boxedValue;

                            OnNumberGet(ref __unboxedValue);

                            return __unboxedValue;
                        }
                        set
                        {
                            OnNumberSet(ref value);

                            object? __boxedValue = value;

                            OnNumberSet(ref __boxedValue);

                            SetValue(NumberProperty, __boxedValue);

                            OnNumberChanged(value);
                        }
                    }

                    /// <summary>Executes the logic for when the <see langword="get"/> accessor <see cref="Number"/> is invoked</summary>
                    /// <param name="propertyValue">The raw property value that has been retrieved from <see cref="NumberProperty"/>.</param>
                    /// <remarks>This method is invoked on the boxed value retrieved via <see cref="GetValue"/> on <see cref="NumberProperty"/>.</remarks>
                    [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.WinUI.DependencyPropertyGenerator", <ASSEMBLY_VERSION>)]
                    partial void OnNumberGet(ref object propertyValue);

                    /// <summary>Executes the logic for when the <see langword="get"/> accessor <see cref="Number"/> is invoked</summary>
                    /// <param name="propertyValue">The unboxed property value that has been retrieved from <see cref="NumberProperty"/>.</param>
                    /// <remarks>This method is invoked on the unboxed value retrieved via <see cref="GetValue"/> on <see cref="NumberProperty"/>.</remarks>
                    [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.WinUI.DependencyPropertyGenerator", <ASSEMBLY_VERSION>)]
                    partial void OnNumberGet(ref int propertyValue);

                    /// <summary>Executes the logic for when the <see langword="set"/> accessor <see cref="Number"/> is invoked</summary>
                    /// <param name="propertyValue">The boxed property value that has been produced before assigning to <see cref="NumberProperty"/>.</param>
                    /// <remarks>This method is invoked on the boxed value that is about to be passed to <see cref="SetValue"/> on <see cref="NumberProperty"/>.</remarks>
                    [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.WinUI.DependencyPropertyGenerator", <ASSEMBLY_VERSION>)]
                    partial void OnNumberSet(ref object propertyValue);

                    /// <summary>Executes the logic for when the <see langword="set"/> accessor <see cref="Number"/> is invoked</summary>
                    /// <param name="propertyValue">The property value that is being assigned to <see cref="Number"/>.</param>
                    /// <remarks>This method is invoked on the raw value being assigned to <see cref="Number"/>, before <see cref="SetValue"/> is used.</remarks>
                    [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.WinUI.DependencyPropertyGenerator", <ASSEMBLY_VERSION>)]
                    partial void OnNumberSet(ref int propertyValue);

                    /// <summary>Executes the logic for when <see cref="Number"/> has just changed.</summary>
                    /// <param name="value">The new property value that has been set.</param>
                    /// <remarks>This method is invoked right after the value of <see cref="Number"/> is changed.</remarks>
                    [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.WinUI.DependencyPropertyGenerator", <ASSEMBLY_VERSION>)]
                    partial void OnNumberChanged(int newValue);

                    /// <summary>Executes the logic for when <see cref="Number"/> has just changed.</summary>
                    /// <param name="e">Event data that is issued by any event that tracks changes to the effective value of this property.</param>
                    /// <remarks>This method is invoked by the <see cref="global::Windows.UI.Xaml.DependencyProperty"/> infrastructure, after the value of <see cref="Number"/> is changed.</remarks>
                    [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.WinUI.DependencyPropertyGenerator", <ASSEMBLY_VERSION>)]
                    partial void OnNumberPropertyChanged(global::Windows.UI.Xaml.DependencyPropertyChangedEventArgs e);

                    /// <summary>Executes the logic for when any dependency property has just changed.</summary>
                    /// <param name="e">Event data that is issued by any event that tracks changes to the effective value of this property.</param>
                    /// <remarks>This method is invoked by the <see cref="global::Windows.UI.Xaml.DependencyProperty"/> infrastructure, after the value of any dependency property has just changed.</remarks>
                    [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.WinUI.DependencyPropertyGenerator", <ASSEMBLY_VERSION>)]
                    partial void OnPropertyChanged(global::Windows.UI.Xaml.DependencyPropertyChangedEventArgs e);
                }
            }

            namespace CommunityToolkit.WinUI.DependencyPropertyGenerator
            {
                using global::System.Runtime.CompilerServices;
                using global::Windows.UI.Xaml;

                /// <summary>
                /// Contains shared property changed callbacks for <see cref="MyControl"/>.
                /// </summary>
                [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.WinUI.DependencyPropertyGenerator", <ASSEMBLY_VERSION>)]
                [global::System.Diagnostics.DebuggerNonUserCode]
                [global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
                file static class PropertyChangedCallbacks
                {
                    /// <summary>
                    /// Gets a <see cref="PropertyChangedCallback"/> value for <see cref="global::MyNamespace.MyControl.NumberProperty"/>.
                    /// </summary>
                    /// <returns>The <see cref="PropertyChangedCallback"/> value with the right callbacks.</returns>
                    public static PropertyChangedCallback Number()
                    {
                        static void Invoke(object d, DependencyPropertyChangedEventArgs e)
                        {
                            global::MyNamespace.MyControl __this = (global::MyNamespace.MyControl)d;

                            OnPropertyChanged(__this, e);
                        }

                        return new(Invoke);
                    }

                    /// <inheritdoc cref="global::MyNamespace.MyControl.OnPropertyChanged"/>
                    [UnsafeAccessor(UnsafeAccessorKind.Method, Name = "OnPropertyChanged")]
                    private static extern void OnPropertyChanged(global::MyNamespace.MyControl _, DependencyPropertyChangedEventArgs e);
                }
            }
            """;

        CSharpGeneratorTest<DependencyPropertyGenerator>.VerifySources(source, ("MyNamespace.MyControl.g.cs", result), languageVersion: LanguageVersion.Preview);
    }

    [TestMethod]
    public void SingleProperty_Int32_WithNoCaching_WithBothCallbacks()
    {
        const string source = """
            using Windows.UI.Xaml;
            using CommunityToolkit.WinUI;

            namespace MyNamespace;

            public partial class MyControl : DependencyObject
            {
                [GeneratedDependencyProperty]
                public partial int Number { get; set; }

                partial void OnNumberPropertyChanged(DependencyPropertyChangedEventArgs e)
                {
                }

                partial void OnPropertyChanged(DependencyPropertyChangedEventArgs e)
                {
                }
            }
            """;

        const string result = """
            // <auto-generated/>
            #pragma warning disable
            #nullable enable

            namespace MyNamespace
            {
                /// <inheritdoc cref="MyControl"/>
                partial class MyControl
                {
                    /// <summary>
                    /// The backing <see cref="global::Windows.UI.Xaml.DependencyProperty"/> instance for <see cref="Number"/>.
                    /// </summary>
                    [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.WinUI.DependencyPropertyGenerator", <ASSEMBLY_VERSION>)]
                    public static readonly global::Windows.UI.Xaml.DependencyProperty NumberProperty = global::Windows.UI.Xaml.DependencyProperty.Register(
                        name: "Number",
                        propertyType: typeof(int),
                        ownerType: typeof(MyControl),
                        typeMetadata: new global::Windows.UI.Xaml.PropertyMetadata(
                            defaultValue: default(int),
                            propertyChangedCallback: global::CommunityToolkit.WinUI.DependencyPropertyGenerator.PropertyChangedCallbacks.Number()));

                    /// <inheritdoc/>
                    [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.WinUI.DependencyPropertyGenerator", <ASSEMBLY_VERSION>)]
                    [global::System.Diagnostics.DebuggerNonUserCode]
                    [global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
                    public partial int Number
                    {
                        get
                        {
                            object? __boxedValue = GetValue(NumberProperty);

                            OnNumberGet(ref __boxedValue);

                            int __unboxedValue = (int)__boxedValue;

                            OnNumberGet(ref __unboxedValue);

                            return __unboxedValue;
                        }
                        set
                        {
                            OnNumberSet(ref value);

                            object? __boxedValue = value;

                            OnNumberSet(ref __boxedValue);

                            SetValue(NumberProperty, __boxedValue);

                            OnNumberChanged(value);
                        }
                    }

                    /// <summary>Executes the logic for when the <see langword="get"/> accessor <see cref="Number"/> is invoked</summary>
                    /// <param name="propertyValue">The raw property value that has been retrieved from <see cref="NumberProperty"/>.</param>
                    /// <remarks>This method is invoked on the boxed value retrieved via <see cref="GetValue"/> on <see cref="NumberProperty"/>.</remarks>
                    [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.WinUI.DependencyPropertyGenerator", <ASSEMBLY_VERSION>)]
                    partial void OnNumberGet(ref object propertyValue);

                    /// <summary>Executes the logic for when the <see langword="get"/> accessor <see cref="Number"/> is invoked</summary>
                    /// <param name="propertyValue">The unboxed property value that has been retrieved from <see cref="NumberProperty"/>.</param>
                    /// <remarks>This method is invoked on the unboxed value retrieved via <see cref="GetValue"/> on <see cref="NumberProperty"/>.</remarks>
                    [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.WinUI.DependencyPropertyGenerator", <ASSEMBLY_VERSION>)]
                    partial void OnNumberGet(ref int propertyValue);

                    /// <summary>Executes the logic for when the <see langword="set"/> accessor <see cref="Number"/> is invoked</summary>
                    /// <param name="propertyValue">The boxed property value that has been produced before assigning to <see cref="NumberProperty"/>.</param>
                    /// <remarks>This method is invoked on the boxed value that is about to be passed to <see cref="SetValue"/> on <see cref="NumberProperty"/>.</remarks>
                    [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.WinUI.DependencyPropertyGenerator", <ASSEMBLY_VERSION>)]
                    partial void OnNumberSet(ref object propertyValue);

                    /// <summary>Executes the logic for when the <see langword="set"/> accessor <see cref="Number"/> is invoked</summary>
                    /// <param name="propertyValue">The property value that is being assigned to <see cref="Number"/>.</param>
                    /// <remarks>This method is invoked on the raw value being assigned to <see cref="Number"/>, before <see cref="SetValue"/> is used.</remarks>
                    [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.WinUI.DependencyPropertyGenerator", <ASSEMBLY_VERSION>)]
                    partial void OnNumberSet(ref int propertyValue);

                    /// <summary>Executes the logic for when <see cref="Number"/> has just changed.</summary>
                    /// <param name="value">The new property value that has been set.</param>
                    /// <remarks>This method is invoked right after the value of <see cref="Number"/> is changed.</remarks>
                    [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.WinUI.DependencyPropertyGenerator", <ASSEMBLY_VERSION>)]
                    partial void OnNumberChanged(int newValue);

                    /// <summary>Executes the logic for when <see cref="Number"/> has just changed.</summary>
                    /// <param name="e">Event data that is issued by any event that tracks changes to the effective value of this property.</param>
                    /// <remarks>This method is invoked by the <see cref="global::Windows.UI.Xaml.DependencyProperty"/> infrastructure, after the value of <see cref="Number"/> is changed.</remarks>
                    [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.WinUI.DependencyPropertyGenerator", <ASSEMBLY_VERSION>)]
                    partial void OnNumberPropertyChanged(global::Windows.UI.Xaml.DependencyPropertyChangedEventArgs e);

                    /// <summary>Executes the logic for when any dependency property has just changed.</summary>
                    /// <param name="e">Event data that is issued by any event that tracks changes to the effective value of this property.</param>
                    /// <remarks>This method is invoked by the <see cref="global::Windows.UI.Xaml.DependencyProperty"/> infrastructure, after the value of any dependency property has just changed.</remarks>
                    [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.WinUI.DependencyPropertyGenerator", <ASSEMBLY_VERSION>)]
                    partial void OnPropertyChanged(global::Windows.UI.Xaml.DependencyPropertyChangedEventArgs e);
                }
            }

            namespace CommunityToolkit.WinUI.DependencyPropertyGenerator
            {
                using global::System.Runtime.CompilerServices;
                using global::Windows.UI.Xaml;

                /// <summary>
                /// Contains shared property changed callbacks for <see cref="MyControl"/>.
                /// </summary>
                [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.WinUI.DependencyPropertyGenerator", <ASSEMBLY_VERSION>)]
                [global::System.Diagnostics.DebuggerNonUserCode]
                [global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
                file static class PropertyChangedCallbacks
                {
                    /// <summary>
                    /// Gets a <see cref="PropertyChangedCallback"/> value for <see cref="global::MyNamespace.MyControl.NumberProperty"/>.
                    /// </summary>
                    /// <returns>The <see cref="PropertyChangedCallback"/> value with the right callbacks.</returns>
                    public static PropertyChangedCallback Number()
                    {
                        static void Invoke(object d, DependencyPropertyChangedEventArgs e)
                        {
                            global::MyNamespace.MyControl __this = (global::MyNamespace.MyControl)d;

                            OnNumberPropertyChanged(__this, e);
                            OnPropertyChanged(__this, e);
                        }

                        return new(Invoke);
                    }

                    /// <inheritdoc cref="global::MyNamespace.MyControl.OnNumberPropertyChanged"/>
                    [UnsafeAccessor(UnsafeAccessorKind.Method, Name = "OnNumberPropertyChanged")]
                    private static extern void OnNumberPropertyChanged(global::MyNamespace.MyControl _, DependencyPropertyChangedEventArgs e);

                    /// <inheritdoc cref="global::MyNamespace.MyControl.OnPropertyChanged"/>
                    [UnsafeAccessor(UnsafeAccessorKind.Method, Name = "OnPropertyChanged")]
                    private static extern void OnPropertyChanged(global::MyNamespace.MyControl _, DependencyPropertyChangedEventArgs e);
                }
            }
            """;

        CSharpGeneratorTest<DependencyPropertyGenerator>.VerifySources(source, ("MyNamespace.MyControl.g.cs", result), languageVersion: LanguageVersion.Preview);
    }

    [TestMethod]
    public void SingleProperty_String_WithLocalCache()
    {
        const string source = """
            using Windows.UI.Xaml;
            using CommunityToolkit.WinUI;

            namespace MyNamespace;

            public partial class MyControl : DependencyObject
            {
                [GeneratedDependencyProperty(IsLocalCacheEnabled = true)]
                public partial string? Name { get; set; }
            }
            """;

        const string result = """
            // <auto-generated/>
            #pragma warning disable
            #nullable enable

            namespace MyNamespace
            {
                /// <inheritdoc cref="MyControl"/>
                partial class MyControl
                {
                    /// <summary>
                    /// The backing <see cref="global::Windows.UI.Xaml.DependencyProperty"/> instance for <see cref="Name"/>.
                    /// </summary>
                    [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.WinUI.DependencyPropertyGenerator", <ASSEMBLY_VERSION>)]
                    public static readonly global::Windows.UI.Xaml.DependencyProperty NameProperty = global::Windows.UI.Xaml.DependencyProperty.Register(
                        name: "Name",
                        propertyType: typeof(string),
                        ownerType: typeof(MyControl),
                        typeMetadata: null);

                    /// <inheritdoc/>
                    [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.WinUI.DependencyPropertyGenerator", <ASSEMBLY_VERSION>)]
                    [global::System.Diagnostics.DebuggerNonUserCode]
                    [global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
                    public partial string? Name
                    {
                        get => field;
                        set
                        {
                            OnNameSet(ref value);

                            if (global::System.Collections.Generic.EqualityComparer<string?>.Default.Equals(field, value))
                            {
                                return;
                            }

                            string? __oldValue = field;

                            OnNameChanging(value);
                            OnNameChanging(__oldValue, value);

                            field = value;

                            object? __boxedValue = value;

                            OnNameSet(ref __boxedValue);

                            SetValue(NameProperty, __boxedValue);

                            OnNameChanged(value);
                            OnNameChanged(__oldValue, value);
                        }
                    }

                    /// <summary>Executes the logic for when the <see langword="set"/> accessor <see cref="Name"/> is invoked</summary>
                    /// <param name="propertyValue">The boxed property value that has been produced before assigning to <see cref="NameProperty"/>.</param>
                    /// <remarks>This method is invoked on the boxed value that is about to be passed to <see cref="SetValue"/> on <see cref="NameProperty"/>.</remarks>
                    [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.WinUI.DependencyPropertyGenerator", <ASSEMBLY_VERSION>)]
                    partial void OnNameSet(ref object? propertyValue);

                    /// <summary>Executes the logic for when the <see langword="set"/> accessor <see cref="Name"/> is invoked</summary>
                    /// <param name="propertyValue">The property value that is being assigned to <see cref="Name"/>.</param>
                    /// <remarks>This method is invoked on the raw value being assigned to <see cref="Name"/>, before <see cref="SetValue"/> is used.</remarks>
                    [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.WinUI.DependencyPropertyGenerator", <ASSEMBLY_VERSION>)]
                    partial void OnNameSet(ref string? propertyValue);

                    /// <summary>Executes the logic for when <see cref="Name"/> is changing.</summary>
                    /// <param name="value">The new property value being set.</param>
                    /// <remarks>This method is invoked right before the value of <see cref="Name"/> is changed.</remarks>
                    [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.WinUI.DependencyPropertyGenerator", <ASSEMBLY_VERSION>)]
                    partial void OnNameChanging(string? newValue);

                    /// <summary>Executes the logic for when <see cref="Name"/> is changing.</summary>
                    /// <param name="oldValue">The previous property value that is being replaced.</param>
                    /// <param name="newValue">The new property value being set.</param>
                    /// <remarks>This method is invoked right before the value of <see cref="Name"/> is changed.</remarks>
                    [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.WinUI.DependencyPropertyGenerator", <ASSEMBLY_VERSION>)]
                    partial void OnNameChanging(string? oldValue, string? newValue);

                    /// <summary>Executes the logic for when <see cref="Name"/> has just changed.</summary>
                    /// <param name="value">The new property value that has been set.</param>
                    /// <remarks>This method is invoked right after the value of <see cref="Name"/> is changed.</remarks>
                    [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.WinUI.DependencyPropertyGenerator", <ASSEMBLY_VERSION>)]
                    partial void OnNameChanged(string? newValue);

                    /// <summary>Executes the logic for when <see cref="Name"/> has just changed.</summary>
                    /// <param name="oldValue">The previous property value that has been replaced.</param>
                    /// <param name="newValue">The new property value that has been set.</param>
                    /// <remarks>This method is invoked right after the value of <see cref="Name"/> is changed.</remarks>
                    [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.WinUI.DependencyPropertyGenerator", <ASSEMBLY_VERSION>)]
                    partial void OnNameChanged(string? oldValue, string? newValue);

                    /// <summary>Executes the logic for when <see cref="Name"/> has just changed.</summary>
                    /// <param name="e">Event data that is issued by any event that tracks changes to the effective value of this property.</param>
                    /// <remarks>This method is invoked by the <see cref="global::Windows.UI.Xaml.DependencyProperty"/> infrastructure, after the value of <see cref="Name"/> is changed.</remarks>
                    [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.WinUI.DependencyPropertyGenerator", <ASSEMBLY_VERSION>)]
                    partial void OnNamePropertyChanged(global::Windows.UI.Xaml.DependencyPropertyChangedEventArgs e);

                    /// <summary>Executes the logic for when any dependency property has just changed.</summary>
                    /// <param name="e">Event data that is issued by any event that tracks changes to the effective value of this property.</param>
                    /// <remarks>This method is invoked by the <see cref="global::Windows.UI.Xaml.DependencyProperty"/> infrastructure, after the value of any dependency property has just changed.</remarks>
                    [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.WinUI.DependencyPropertyGenerator", <ASSEMBLY_VERSION>)]
                    partial void OnPropertyChanged(global::Windows.UI.Xaml.DependencyPropertyChangedEventArgs e);
                }
            }
            """;

        CSharpGeneratorTest<DependencyPropertyGenerator>.VerifySources(source, ("MyNamespace.MyControl.g.cs", result), languageVersion: LanguageVersion.Preview);
    }

    [TestMethod]
    public void SingleProperty_String_WithNoCaching()
    {
        const string source = """
            using Windows.UI.Xaml;
            using CommunityToolkit.WinUI;

            namespace MyNamespace;

            public partial class MyControl : DependencyObject
            {
                [GeneratedDependencyProperty]
                public partial string? Name { get; set; }
            }
            """;

        const string result = """
            // <auto-generated/>
            #pragma warning disable
            #nullable enable

            namespace MyNamespace
            {
                /// <inheritdoc cref="MyControl"/>
                partial class MyControl
                {
                    /// <summary>
                    /// The backing <see cref="global::Windows.UI.Xaml.DependencyProperty"/> instance for <see cref="Name"/>.
                    /// </summary>
                    [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.WinUI.DependencyPropertyGenerator", <ASSEMBLY_VERSION>)]
                    public static readonly global::Windows.UI.Xaml.DependencyProperty NameProperty = global::Windows.UI.Xaml.DependencyProperty.Register(
                        name: "Name",
                        propertyType: typeof(string),
                        ownerType: typeof(MyControl),
                        typeMetadata: null);

                    /// <inheritdoc/>
                    [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.WinUI.DependencyPropertyGenerator", <ASSEMBLY_VERSION>)]
                    [global::System.Diagnostics.DebuggerNonUserCode]
                    [global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
                    public partial string? Name
                    {
                        get
                        {
                            object? __boxedValue = GetValue(NameProperty);

                            OnNameGet(ref __boxedValue);

                            string? __unboxedValue = (string?)__boxedValue;

                            OnNameGet(ref __unboxedValue);

                            return __unboxedValue;
                        }
                        set
                        {
                            OnNameSet(ref value);

                            object? __boxedValue = value;

                            OnNameSet(ref __boxedValue);

                            SetValue(NameProperty, __boxedValue);

                            OnNameChanged(value);
                        }
                    }

                    /// <summary>Executes the logic for when the <see langword="get"/> accessor <see cref="Name"/> is invoked</summary>
                    /// <param name="propertyValue">The raw property value that has been retrieved from <see cref="NameProperty"/>.</param>
                    /// <remarks>This method is invoked on the boxed value retrieved via <see cref="GetValue"/> on <see cref="NameProperty"/>.</remarks>
                    [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.WinUI.DependencyPropertyGenerator", <ASSEMBLY_VERSION>)]
                    partial void OnNameGet(ref object? propertyValue);

                    /// <summary>Executes the logic for when the <see langword="get"/> accessor <see cref="Name"/> is invoked</summary>
                    /// <param name="propertyValue">The unboxed property value that has been retrieved from <see cref="NameProperty"/>.</param>
                    /// <remarks>This method is invoked on the unboxed value retrieved via <see cref="GetValue"/> on <see cref="NameProperty"/>.</remarks>
                    [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.WinUI.DependencyPropertyGenerator", <ASSEMBLY_VERSION>)]
                    partial void OnNameGet(ref string? propertyValue);

                    /// <summary>Executes the logic for when the <see langword="set"/> accessor <see cref="Name"/> is invoked</summary>
                    /// <param name="propertyValue">The boxed property value that has been produced before assigning to <see cref="NameProperty"/>.</param>
                    /// <remarks>This method is invoked on the boxed value that is about to be passed to <see cref="SetValue"/> on <see cref="NameProperty"/>.</remarks>
                    [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.WinUI.DependencyPropertyGenerator", <ASSEMBLY_VERSION>)]
                    partial void OnNameSet(ref object? propertyValue);

                    /// <summary>Executes the logic for when the <see langword="set"/> accessor <see cref="Name"/> is invoked</summary>
                    /// <param name="propertyValue">The property value that is being assigned to <see cref="Name"/>.</param>
                    /// <remarks>This method is invoked on the raw value being assigned to <see cref="Name"/>, before <see cref="SetValue"/> is used.</remarks>
                    [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.WinUI.DependencyPropertyGenerator", <ASSEMBLY_VERSION>)]
                    partial void OnNameSet(ref string? propertyValue);

                    /// <summary>Executes the logic for when <see cref="Name"/> has just changed.</summary>
                    /// <param name="value">The new property value that has been set.</param>
                    /// <remarks>This method is invoked right after the value of <see cref="Name"/> is changed.</remarks>
                    [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.WinUI.DependencyPropertyGenerator", <ASSEMBLY_VERSION>)]
                    partial void OnNameChanged(string? newValue);

                    /// <summary>Executes the logic for when <see cref="Name"/> has just changed.</summary>
                    /// <param name="e">Event data that is issued by any event that tracks changes to the effective value of this property.</param>
                    /// <remarks>This method is invoked by the <see cref="global::Windows.UI.Xaml.DependencyProperty"/> infrastructure, after the value of <see cref="Name"/> is changed.</remarks>
                    [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.WinUI.DependencyPropertyGenerator", <ASSEMBLY_VERSION>)]
                    partial void OnNamePropertyChanged(global::Windows.UI.Xaml.DependencyPropertyChangedEventArgs e);

                    /// <summary>Executes the logic for when any dependency property has just changed.</summary>
                    /// <param name="e">Event data that is issued by any event that tracks changes to the effective value of this property.</param>
                    /// <remarks>This method is invoked by the <see cref="global::Windows.UI.Xaml.DependencyProperty"/> infrastructure, after the value of any dependency property has just changed.</remarks>
                    [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.WinUI.DependencyPropertyGenerator", <ASSEMBLY_VERSION>)]
                    partial void OnPropertyChanged(global::Windows.UI.Xaml.DependencyPropertyChangedEventArgs e);
                }
            }
            """;

        CSharpGeneratorTest<DependencyPropertyGenerator>.VerifySources(source, ("MyNamespace.MyControl.g.cs", result), languageVersion: LanguageVersion.Preview);
    }

    [TestMethod]
    public void SingleProperty_String_WithNoCaching_Required()
    {
        const string source = """
            using Windows.UI.Xaml;
            using CommunityToolkit.WinUI;

            namespace MyNamespace;

            public partial class MyControl : DependencyObject
            {
                [GeneratedDependencyProperty]
                public required partial string Name { get; set; }
            }
            """;

        const string result = """
            // <auto-generated/>
            #pragma warning disable
            #nullable enable

            namespace MyNamespace
            {
                /// <inheritdoc cref="MyControl"/>
                partial class MyControl
                {
                    /// <summary>
                    /// The backing <see cref="global::Windows.UI.Xaml.DependencyProperty"/> instance for <see cref="Name"/>.
                    /// </summary>
                    [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.WinUI.DependencyPropertyGenerator", <ASSEMBLY_VERSION>)]
                    public static readonly global::Windows.UI.Xaml.DependencyProperty NameProperty = global::Windows.UI.Xaml.DependencyProperty.Register(
                        name: "Name",
                        propertyType: typeof(string),
                        ownerType: typeof(MyControl),
                        typeMetadata: null);

                    /// <inheritdoc/>
                    [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.WinUI.DependencyPropertyGenerator", <ASSEMBLY_VERSION>)]
                    [global::System.Diagnostics.DebuggerNonUserCode]
                    [global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
                    public required partial string Name
                    {
                        get
                        {
                            object? __boxedValue = GetValue(NameProperty);

                            OnNameGet(ref __boxedValue);

                            string __unboxedValue = (string)__boxedValue;

                            OnNameGet(ref __unboxedValue);

                            return __unboxedValue;
                        }
                        set
                        {
                            OnNameSet(ref value);

                            object? __boxedValue = value;

                            OnNameSet(ref __boxedValue);

                            SetValue(NameProperty, __boxedValue);

                            OnNameChanged(value);
                        }
                    }

                    /// <summary>Executes the logic for when the <see langword="get"/> accessor <see cref="Name"/> is invoked</summary>
                    /// <param name="propertyValue">The raw property value that has been retrieved from <see cref="NameProperty"/>.</param>
                    /// <remarks>This method is invoked on the boxed value retrieved via <see cref="GetValue"/> on <see cref="NameProperty"/>.</remarks>
                    [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.WinUI.DependencyPropertyGenerator", <ASSEMBLY_VERSION>)]
                    partial void OnNameGet(ref object propertyValue);

                    /// <summary>Executes the logic for when the <see langword="get"/> accessor <see cref="Name"/> is invoked</summary>
                    /// <param name="propertyValue">The unboxed property value that has been retrieved from <see cref="NameProperty"/>.</param>
                    /// <remarks>This method is invoked on the unboxed value retrieved via <see cref="GetValue"/> on <see cref="NameProperty"/>.</remarks>
                    [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.WinUI.DependencyPropertyGenerator", <ASSEMBLY_VERSION>)]
                    partial void OnNameGet(ref string propertyValue);

                    /// <summary>Executes the logic for when the <see langword="set"/> accessor <see cref="Name"/> is invoked</summary>
                    /// <param name="propertyValue">The boxed property value that has been produced before assigning to <see cref="NameProperty"/>.</param>
                    /// <remarks>This method is invoked on the boxed value that is about to be passed to <see cref="SetValue"/> on <see cref="NameProperty"/>.</remarks>
                    [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.WinUI.DependencyPropertyGenerator", <ASSEMBLY_VERSION>)]
                    partial void OnNameSet(ref object propertyValue);

                    /// <summary>Executes the logic for when the <see langword="set"/> accessor <see cref="Name"/> is invoked</summary>
                    /// <param name="propertyValue">The property value that is being assigned to <see cref="Name"/>.</param>
                    /// <remarks>This method is invoked on the raw value being assigned to <see cref="Name"/>, before <see cref="SetValue"/> is used.</remarks>
                    [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.WinUI.DependencyPropertyGenerator", <ASSEMBLY_VERSION>)]
                    partial void OnNameSet(ref string propertyValue);

                    /// <summary>Executes the logic for when <see cref="Name"/> has just changed.</summary>
                    /// <param name="value">The new property value that has been set.</param>
                    /// <remarks>This method is invoked right after the value of <see cref="Name"/> is changed.</remarks>
                    [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.WinUI.DependencyPropertyGenerator", <ASSEMBLY_VERSION>)]
                    partial void OnNameChanged(string newValue);

                    /// <summary>Executes the logic for when <see cref="Name"/> has just changed.</summary>
                    /// <param name="e">Event data that is issued by any event that tracks changes to the effective value of this property.</param>
                    /// <remarks>This method is invoked by the <see cref="global::Windows.UI.Xaml.DependencyProperty"/> infrastructure, after the value of <see cref="Name"/> is changed.</remarks>
                    [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.WinUI.DependencyPropertyGenerator", <ASSEMBLY_VERSION>)]
                    partial void OnNamePropertyChanged(global::Windows.UI.Xaml.DependencyPropertyChangedEventArgs e);

                    /// <summary>Executes the logic for when any dependency property has just changed.</summary>
                    /// <param name="e">Event data that is issued by any event that tracks changes to the effective value of this property.</param>
                    /// <remarks>This method is invoked by the <see cref="global::Windows.UI.Xaml.DependencyProperty"/> infrastructure, after the value of any dependency property has just changed.</remarks>
                    [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.WinUI.DependencyPropertyGenerator", <ASSEMBLY_VERSION>)]
                    partial void OnPropertyChanged(global::Windows.UI.Xaml.DependencyPropertyChangedEventArgs e);
                }
            }
            """;

        CSharpGeneratorTest<DependencyPropertyGenerator>.VerifySources(source, ("MyNamespace.MyControl.g.cs", result), languageVersion: LanguageVersion.Preview);
    }

    [TestMethod]
    public void SingleProperty_String_WithNoCaching_New()
    {
        const string source = """
            using Windows.UI.Xaml;
            using CommunityToolkit.WinUI;

            namespace MyNamespace;

            public class BaseControl : DependencyObject
            {
                public new string Name { get; set; }
            }

            public partial class MyControl : BaseControl
            {
                [GeneratedDependencyProperty]
                public new partial string Name { get; set; }
            }
            """;

        const string result = """
            // <auto-generated/>
            #pragma warning disable
            #nullable enable

            namespace MyNamespace
            {
                /// <inheritdoc cref="MyControl"/>
                partial class MyControl
                {
                    /// <summary>
                    /// The backing <see cref="global::Windows.UI.Xaml.DependencyProperty"/> instance for <see cref="Name"/>.
                    /// </summary>
                    [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.WinUI.DependencyPropertyGenerator", <ASSEMBLY_VERSION>)]
                    public static readonly global::Windows.UI.Xaml.DependencyProperty NameProperty = global::Windows.UI.Xaml.DependencyProperty.Register(
                        name: "Name",
                        propertyType: typeof(string),
                        ownerType: typeof(MyControl),
                        typeMetadata: null);

                    /// <inheritdoc/>
                    [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.WinUI.DependencyPropertyGenerator", <ASSEMBLY_VERSION>)]
                    [global::System.Diagnostics.DebuggerNonUserCode]
                    [global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
                    public new partial string Name
                    {
                        get
                        {
                            object? __boxedValue = GetValue(NameProperty);

                            OnNameGet(ref __boxedValue);

                            string __unboxedValue = (string)__boxedValue;

                            OnNameGet(ref __unboxedValue);

                            return __unboxedValue;
                        }
                        set
                        {
                            OnNameSet(ref value);

                            object? __boxedValue = value;

                            OnNameSet(ref __boxedValue);

                            SetValue(NameProperty, __boxedValue);

                            OnNameChanged(value);
                        }
                    }

                    /// <summary>Executes the logic for when the <see langword="get"/> accessor <see cref="Name"/> is invoked</summary>
                    /// <param name="propertyValue">The raw property value that has been retrieved from <see cref="NameProperty"/>.</param>
                    /// <remarks>This method is invoked on the boxed value retrieved via <see cref="GetValue"/> on <see cref="NameProperty"/>.</remarks>
                    [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.WinUI.DependencyPropertyGenerator", <ASSEMBLY_VERSION>)]
                    partial void OnNameGet(ref object propertyValue);

                    /// <summary>Executes the logic for when the <see langword="get"/> accessor <see cref="Name"/> is invoked</summary>
                    /// <param name="propertyValue">The unboxed property value that has been retrieved from <see cref="NameProperty"/>.</param>
                    /// <remarks>This method is invoked on the unboxed value retrieved via <see cref="GetValue"/> on <see cref="NameProperty"/>.</remarks>
                    [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.WinUI.DependencyPropertyGenerator", <ASSEMBLY_VERSION>)]
                    partial void OnNameGet(ref string propertyValue);

                    /// <summary>Executes the logic for when the <see langword="set"/> accessor <see cref="Name"/> is invoked</summary>
                    /// <param name="propertyValue">The boxed property value that has been produced before assigning to <see cref="NameProperty"/>.</param>
                    /// <remarks>This method is invoked on the boxed value that is about to be passed to <see cref="SetValue"/> on <see cref="NameProperty"/>.</remarks>
                    [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.WinUI.DependencyPropertyGenerator", <ASSEMBLY_VERSION>)]
                    partial void OnNameSet(ref object propertyValue);

                    /// <summary>Executes the logic for when the <see langword="set"/> accessor <see cref="Name"/> is invoked</summary>
                    /// <param name="propertyValue">The property value that is being assigned to <see cref="Name"/>.</param>
                    /// <remarks>This method is invoked on the raw value being assigned to <see cref="Name"/>, before <see cref="SetValue"/> is used.</remarks>
                    [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.WinUI.DependencyPropertyGenerator", <ASSEMBLY_VERSION>)]
                    partial void OnNameSet(ref string propertyValue);

                    /// <summary>Executes the logic for when <see cref="Name"/> has just changed.</summary>
                    /// <param name="value">The new property value that has been set.</param>
                    /// <remarks>This method is invoked right after the value of <see cref="Name"/> is changed.</remarks>
                    [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.WinUI.DependencyPropertyGenerator", <ASSEMBLY_VERSION>)]
                    partial void OnNameChanged(string newValue);

                    /// <summary>Executes the logic for when <see cref="Name"/> has just changed.</summary>
                    /// <param name="e">Event data that is issued by any event that tracks changes to the effective value of this property.</param>
                    /// <remarks>This method is invoked by the <see cref="global::Windows.UI.Xaml.DependencyProperty"/> infrastructure, after the value of <see cref="Name"/> is changed.</remarks>
                    [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.WinUI.DependencyPropertyGenerator", <ASSEMBLY_VERSION>)]
                    partial void OnNamePropertyChanged(global::Windows.UI.Xaml.DependencyPropertyChangedEventArgs e);

                    /// <summary>Executes the logic for when any dependency property has just changed.</summary>
                    /// <param name="e">Event data that is issued by any event that tracks changes to the effective value of this property.</param>
                    /// <remarks>This method is invoked by the <see cref="global::Windows.UI.Xaml.DependencyProperty"/> infrastructure, after the value of any dependency property has just changed.</remarks>
                    [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.WinUI.DependencyPropertyGenerator", <ASSEMBLY_VERSION>)]
                    partial void OnPropertyChanged(global::Windows.UI.Xaml.DependencyPropertyChangedEventArgs e);
                }
            }
            """;

        CSharpGeneratorTest<DependencyPropertyGenerator>.VerifySources(source, ("MyNamespace.MyControl.g.cs", result), languageVersion: LanguageVersion.Preview);
    }

    [TestMethod]
    public void SingleProperty_String_WithNoCaching_Virtual()
    {
        const string source = """
            using Windows.UI.Xaml;
            using CommunityToolkit.WinUI;

            namespace MyNamespace;

            public partial class MyControl : DependencyObject
            {
                [GeneratedDependencyProperty]
                public virtual partial string Name { get; set; }
            }
            """;

        const string result = """
            // <auto-generated/>
            #pragma warning disable
            #nullable enable

            namespace MyNamespace
            {
                /// <inheritdoc cref="MyControl"/>
                partial class MyControl
                {
                    /// <summary>
                    /// The backing <see cref="global::Windows.UI.Xaml.DependencyProperty"/> instance for <see cref="Name"/>.
                    /// </summary>
                    [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.WinUI.DependencyPropertyGenerator", <ASSEMBLY_VERSION>)]
                    public static readonly global::Windows.UI.Xaml.DependencyProperty NameProperty = global::Windows.UI.Xaml.DependencyProperty.Register(
                        name: "Name",
                        propertyType: typeof(string),
                        ownerType: typeof(MyControl),
                        typeMetadata: null);

                    /// <inheritdoc/>
                    [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.WinUI.DependencyPropertyGenerator", <ASSEMBLY_VERSION>)]
                    [global::System.Diagnostics.DebuggerNonUserCode]
                    [global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
                    public virtual partial string Name
                    {
                        get
                        {
                            object? __boxedValue = GetValue(NameProperty);

                            OnNameGet(ref __boxedValue);

                            string __unboxedValue = (string)__boxedValue;

                            OnNameGet(ref __unboxedValue);

                            return __unboxedValue;
                        }
                        set
                        {
                            OnNameSet(ref value);

                            object? __boxedValue = value;

                            OnNameSet(ref __boxedValue);

                            SetValue(NameProperty, __boxedValue);

                            OnNameChanged(value);
                        }
                    }

                    /// <summary>Executes the logic for when the <see langword="get"/> accessor <see cref="Name"/> is invoked</summary>
                    /// <param name="propertyValue">The raw property value that has been retrieved from <see cref="NameProperty"/>.</param>
                    /// <remarks>This method is invoked on the boxed value retrieved via <see cref="GetValue"/> on <see cref="NameProperty"/>.</remarks>
                    [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.WinUI.DependencyPropertyGenerator", <ASSEMBLY_VERSION>)]
                    partial void OnNameGet(ref object propertyValue);

                    /// <summary>Executes the logic for when the <see langword="get"/> accessor <see cref="Name"/> is invoked</summary>
                    /// <param name="propertyValue">The unboxed property value that has been retrieved from <see cref="NameProperty"/>.</param>
                    /// <remarks>This method is invoked on the unboxed value retrieved via <see cref="GetValue"/> on <see cref="NameProperty"/>.</remarks>
                    [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.WinUI.DependencyPropertyGenerator", <ASSEMBLY_VERSION>)]
                    partial void OnNameGet(ref string propertyValue);

                    /// <summary>Executes the logic for when the <see langword="set"/> accessor <see cref="Name"/> is invoked</summary>
                    /// <param name="propertyValue">The boxed property value that has been produced before assigning to <see cref="NameProperty"/>.</param>
                    /// <remarks>This method is invoked on the boxed value that is about to be passed to <see cref="SetValue"/> on <see cref="NameProperty"/>.</remarks>
                    [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.WinUI.DependencyPropertyGenerator", <ASSEMBLY_VERSION>)]
                    partial void OnNameSet(ref object propertyValue);

                    /// <summary>Executes the logic for when the <see langword="set"/> accessor <see cref="Name"/> is invoked</summary>
                    /// <param name="propertyValue">The property value that is being assigned to <see cref="Name"/>.</param>
                    /// <remarks>This method is invoked on the raw value being assigned to <see cref="Name"/>, before <see cref="SetValue"/> is used.</remarks>
                    [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.WinUI.DependencyPropertyGenerator", <ASSEMBLY_VERSION>)]
                    partial void OnNameSet(ref string propertyValue);

                    /// <summary>Executes the logic for when <see cref="Name"/> has just changed.</summary>
                    /// <param name="value">The new property value that has been set.</param>
                    /// <remarks>This method is invoked right after the value of <see cref="Name"/> is changed.</remarks>
                    [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.WinUI.DependencyPropertyGenerator", <ASSEMBLY_VERSION>)]
                    partial void OnNameChanged(string newValue);

                    /// <summary>Executes the logic for when <see cref="Name"/> has just changed.</summary>
                    /// <param name="e">Event data that is issued by any event that tracks changes to the effective value of this property.</param>
                    /// <remarks>This method is invoked by the <see cref="global::Windows.UI.Xaml.DependencyProperty"/> infrastructure, after the value of <see cref="Name"/> is changed.</remarks>
                    [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.WinUI.DependencyPropertyGenerator", <ASSEMBLY_VERSION>)]
                    partial void OnNamePropertyChanged(global::Windows.UI.Xaml.DependencyPropertyChangedEventArgs e);

                    /// <summary>Executes the logic for when any dependency property has just changed.</summary>
                    /// <param name="e">Event data that is issued by any event that tracks changes to the effective value of this property.</param>
                    /// <remarks>This method is invoked by the <see cref="global::Windows.UI.Xaml.DependencyProperty"/> infrastructure, after the value of any dependency property has just changed.</remarks>
                    [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.WinUI.DependencyPropertyGenerator", <ASSEMBLY_VERSION>)]
                    partial void OnPropertyChanged(global::Windows.UI.Xaml.DependencyPropertyChangedEventArgs e);
                }
            }
            """;

        CSharpGeneratorTest<DependencyPropertyGenerator>.VerifySources(source, ("MyNamespace.MyControl.g.cs", result), languageVersion: LanguageVersion.Preview);
    }

    [TestMethod]
    [DataRow("override")]
    [DataRow("sealed override")]
    public void SingleProperty_String_WithNoCaching_Override(string modifiers)
    {
        string source = $$"""
            using Windows.UI.Xaml;
            using CommunityToolkit.WinUI;

            namespace MyNamespace;

            public class BaseControl : DependencyObject
            {
                public virtual string Name { get; set; }
            }

            public partial class MyControl : BaseControl
            {
                [GeneratedDependencyProperty]
                public {{modifiers}} partial string Name { get; set; }
            }
            """;

        string result = $$"""
            // <auto-generated/>
            #pragma warning disable
            #nullable enable

            namespace MyNamespace
            {
                /// <inheritdoc cref="MyControl"/>
                partial class MyControl
                {
                    /// <summary>
                    /// The backing <see cref="global::Windows.UI.Xaml.DependencyProperty"/> instance for <see cref="Name"/>.
                    /// </summary>
                    [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.WinUI.DependencyPropertyGenerator", <ASSEMBLY_VERSION>)]
                    public static readonly global::Windows.UI.Xaml.DependencyProperty NameProperty = global::Windows.UI.Xaml.DependencyProperty.Register(
                        name: "Name",
                        propertyType: typeof(string),
                        ownerType: typeof(MyControl),
                        typeMetadata: null);

                    /// <inheritdoc/>
                    [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.WinUI.DependencyPropertyGenerator", <ASSEMBLY_VERSION>)]
                    [global::System.Diagnostics.DebuggerNonUserCode]
                    [global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
                    public {{modifiers}} partial string Name
                    {
                        get
                        {
                            object? __boxedValue = GetValue(NameProperty);

                            OnNameGet(ref __boxedValue);

                            string __unboxedValue = (string)__boxedValue;

                            OnNameGet(ref __unboxedValue);

                            return __unboxedValue;
                        }
                        set
                        {
                            OnNameSet(ref value);

                            object? __boxedValue = value;

                            OnNameSet(ref __boxedValue);

                            SetValue(NameProperty, __boxedValue);

                            OnNameChanged(value);
                        }
                    }

                    /// <summary>Executes the logic for when the <see langword="get"/> accessor <see cref="Name"/> is invoked</summary>
                    /// <param name="propertyValue">The raw property value that has been retrieved from <see cref="NameProperty"/>.</param>
                    /// <remarks>This method is invoked on the boxed value retrieved via <see cref="GetValue"/> on <see cref="NameProperty"/>.</remarks>
                    [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.WinUI.DependencyPropertyGenerator", <ASSEMBLY_VERSION>)]
                    partial void OnNameGet(ref object propertyValue);

                    /// <summary>Executes the logic for when the <see langword="get"/> accessor <see cref="Name"/> is invoked</summary>
                    /// <param name="propertyValue">The unboxed property value that has been retrieved from <see cref="NameProperty"/>.</param>
                    /// <remarks>This method is invoked on the unboxed value retrieved via <see cref="GetValue"/> on <see cref="NameProperty"/>.</remarks>
                    [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.WinUI.DependencyPropertyGenerator", <ASSEMBLY_VERSION>)]
                    partial void OnNameGet(ref string propertyValue);

                    /// <summary>Executes the logic for when the <see langword="set"/> accessor <see cref="Name"/> is invoked</summary>
                    /// <param name="propertyValue">The boxed property value that has been produced before assigning to <see cref="NameProperty"/>.</param>
                    /// <remarks>This method is invoked on the boxed value that is about to be passed to <see cref="SetValue"/> on <see cref="NameProperty"/>.</remarks>
                    [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.WinUI.DependencyPropertyGenerator", <ASSEMBLY_VERSION>)]
                    partial void OnNameSet(ref object propertyValue);

                    /// <summary>Executes the logic for when the <see langword="set"/> accessor <see cref="Name"/> is invoked</summary>
                    /// <param name="propertyValue">The property value that is being assigned to <see cref="Name"/>.</param>
                    /// <remarks>This method is invoked on the raw value being assigned to <see cref="Name"/>, before <see cref="SetValue"/> is used.</remarks>
                    [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.WinUI.DependencyPropertyGenerator", <ASSEMBLY_VERSION>)]
                    partial void OnNameSet(ref string propertyValue);

                    /// <summary>Executes the logic for when <see cref="Name"/> has just changed.</summary>
                    /// <param name="value">The new property value that has been set.</param>
                    /// <remarks>This method is invoked right after the value of <see cref="Name"/> is changed.</remarks>
                    [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.WinUI.DependencyPropertyGenerator", <ASSEMBLY_VERSION>)]
                    partial void OnNameChanged(string newValue);

                    /// <summary>Executes the logic for when <see cref="Name"/> has just changed.</summary>
                    /// <param name="e">Event data that is issued by any event that tracks changes to the effective value of this property.</param>
                    /// <remarks>This method is invoked by the <see cref="global::Windows.UI.Xaml.DependencyProperty"/> infrastructure, after the value of <see cref="Name"/> is changed.</remarks>
                    [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.WinUI.DependencyPropertyGenerator", <ASSEMBLY_VERSION>)]
                    partial void OnNamePropertyChanged(global::Windows.UI.Xaml.DependencyPropertyChangedEventArgs e);

                    /// <summary>Executes the logic for when any dependency property has just changed.</summary>
                    /// <param name="e">Event data that is issued by any event that tracks changes to the effective value of this property.</param>
                    /// <remarks>This method is invoked by the <see cref="global::Windows.UI.Xaml.DependencyProperty"/> infrastructure, after the value of any dependency property has just changed.</remarks>
                    [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.WinUI.DependencyPropertyGenerator", <ASSEMBLY_VERSION>)]
                    partial void OnPropertyChanged(global::Windows.UI.Xaml.DependencyPropertyChangedEventArgs e);
                }
            }
            """;

        CSharpGeneratorTest<DependencyPropertyGenerator>.VerifySources(source, ("MyNamespace.MyControl.g.cs", result), languageVersion: LanguageVersion.Preview);
    }

    [TestMethod]
    public void MultipleProperties_WithNoCaching_CorrectSpacing()
    {
        const string source = """
            using Windows.UI.Xaml;
            using CommunityToolkit.WinUI;

            namespace MyNamespace;

            public partial class MyControl : DependencyObject
            {
                [GeneratedDependencyProperty]
                public partial string? FirstName { get; set; }

                [GeneratedDependencyProperty]
                public partial string? LastName { get; set; }
            }
            """;

        const string result = """
            // <auto-generated/>
            #pragma warning disable
            #nullable enable

            namespace MyNamespace
            {
                /// <inheritdoc cref="MyControl"/>
                partial class MyControl
                {
                    /// <summary>
                    /// The backing <see cref="global::Windows.UI.Xaml.DependencyProperty"/> instance for <see cref="FirstName"/>.
                    /// </summary>
                    [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.WinUI.DependencyPropertyGenerator", <ASSEMBLY_VERSION>)]
                    public static readonly global::Windows.UI.Xaml.DependencyProperty FirstNameProperty = global::Windows.UI.Xaml.DependencyProperty.Register(
                        name: "FirstName",
                        propertyType: typeof(string),
                        ownerType: typeof(MyControl),
                        typeMetadata: null);

                    /// <summary>
                    /// The backing <see cref="global::Windows.UI.Xaml.DependencyProperty"/> instance for <see cref="LastName"/>.
                    /// </summary>
                    [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.WinUI.DependencyPropertyGenerator", <ASSEMBLY_VERSION>)]
                    public static readonly global::Windows.UI.Xaml.DependencyProperty LastNameProperty = global::Windows.UI.Xaml.DependencyProperty.Register(
                        name: "LastName",
                        propertyType: typeof(string),
                        ownerType: typeof(MyControl),
                        typeMetadata: null);

                    /// <inheritdoc/>
                    [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.WinUI.DependencyPropertyGenerator", <ASSEMBLY_VERSION>)]
                    [global::System.Diagnostics.DebuggerNonUserCode]
                    [global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
                    public partial string? FirstName
                    {
                        get
                        {
                            object? __boxedValue = GetValue(FirstNameProperty);

                            OnFirstNameGet(ref __boxedValue);

                            string? __unboxedValue = (string?)__boxedValue;

                            OnFirstNameGet(ref __unboxedValue);

                            return __unboxedValue;
                        }
                        set
                        {
                            OnFirstNameSet(ref value);

                            object? __boxedValue = value;

                            OnFirstNameSet(ref __boxedValue);

                            SetValue(FirstNameProperty, __boxedValue);

                            OnFirstNameChanged(value);
                        }
                    }

                    /// <inheritdoc/>
                    [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.WinUI.DependencyPropertyGenerator", <ASSEMBLY_VERSION>)]
                    [global::System.Diagnostics.DebuggerNonUserCode]
                    [global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
                    public partial string? LastName
                    {
                        get
                        {
                            object? __boxedValue = GetValue(LastNameProperty);

                            OnLastNameGet(ref __boxedValue);

                            string? __unboxedValue = (string?)__boxedValue;

                            OnLastNameGet(ref __unboxedValue);

                            return __unboxedValue;
                        }
                        set
                        {
                            OnLastNameSet(ref value);

                            object? __boxedValue = value;

                            OnLastNameSet(ref __boxedValue);

                            SetValue(LastNameProperty, __boxedValue);

                            OnLastNameChanged(value);
                        }
                    }

                    /// <summary>Executes the logic for when the <see langword="get"/> accessor <see cref="FirstName"/> is invoked</summary>
                    /// <param name="propertyValue">The raw property value that has been retrieved from <see cref="FirstNameProperty"/>.</param>
                    /// <remarks>This method is invoked on the boxed value retrieved via <see cref="GetValue"/> on <see cref="FirstNameProperty"/>.</remarks>
                    [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.WinUI.DependencyPropertyGenerator", <ASSEMBLY_VERSION>)]
                    partial void OnFirstNameGet(ref object? propertyValue);

                    /// <summary>Executes the logic for when the <see langword="get"/> accessor <see cref="FirstName"/> is invoked</summary>
                    /// <param name="propertyValue">The unboxed property value that has been retrieved from <see cref="FirstNameProperty"/>.</param>
                    /// <remarks>This method is invoked on the unboxed value retrieved via <see cref="GetValue"/> on <see cref="FirstNameProperty"/>.</remarks>
                    [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.WinUI.DependencyPropertyGenerator", <ASSEMBLY_VERSION>)]
                    partial void OnFirstNameGet(ref string? propertyValue);

                    /// <summary>Executes the logic for when the <see langword="set"/> accessor <see cref="FirstName"/> is invoked</summary>
                    /// <param name="propertyValue">The boxed property value that has been produced before assigning to <see cref="FirstNameProperty"/>.</param>
                    /// <remarks>This method is invoked on the boxed value that is about to be passed to <see cref="SetValue"/> on <see cref="FirstNameProperty"/>.</remarks>
                    [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.WinUI.DependencyPropertyGenerator", <ASSEMBLY_VERSION>)]
                    partial void OnFirstNameSet(ref object? propertyValue);

                    /// <summary>Executes the logic for when the <see langword="set"/> accessor <see cref="FirstName"/> is invoked</summary>
                    /// <param name="propertyValue">The property value that is being assigned to <see cref="FirstName"/>.</param>
                    /// <remarks>This method is invoked on the raw value being assigned to <see cref="FirstName"/>, before <see cref="SetValue"/> is used.</remarks>
                    [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.WinUI.DependencyPropertyGenerator", <ASSEMBLY_VERSION>)]
                    partial void OnFirstNameSet(ref string? propertyValue);

                    /// <summary>Executes the logic for when <see cref="FirstName"/> has just changed.</summary>
                    /// <param name="value">The new property value that has been set.</param>
                    /// <remarks>This method is invoked right after the value of <see cref="FirstName"/> is changed.</remarks>
                    [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.WinUI.DependencyPropertyGenerator", <ASSEMBLY_VERSION>)]
                    partial void OnFirstNameChanged(string? newValue);

                    /// <summary>Executes the logic for when <see cref="FirstName"/> has just changed.</summary>
                    /// <param name="e">Event data that is issued by any event that tracks changes to the effective value of this property.</param>
                    /// <remarks>This method is invoked by the <see cref="global::Windows.UI.Xaml.DependencyProperty"/> infrastructure, after the value of <see cref="FirstName"/> is changed.</remarks>
                    [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.WinUI.DependencyPropertyGenerator", <ASSEMBLY_VERSION>)]
                    partial void OnFirstNamePropertyChanged(global::Windows.UI.Xaml.DependencyPropertyChangedEventArgs e);

                    /// <summary>Executes the logic for when the <see langword="get"/> accessor <see cref="LastName"/> is invoked</summary>
                    /// <param name="propertyValue">The raw property value that has been retrieved from <see cref="LastNameProperty"/>.</param>
                    /// <remarks>This method is invoked on the boxed value retrieved via <see cref="GetValue"/> on <see cref="LastNameProperty"/>.</remarks>
                    [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.WinUI.DependencyPropertyGenerator", <ASSEMBLY_VERSION>)]
                    partial void OnLastNameGet(ref object? propertyValue);

                    /// <summary>Executes the logic for when the <see langword="get"/> accessor <see cref="LastName"/> is invoked</summary>
                    /// <param name="propertyValue">The unboxed property value that has been retrieved from <see cref="LastNameProperty"/>.</param>
                    /// <remarks>This method is invoked on the unboxed value retrieved via <see cref="GetValue"/> on <see cref="LastNameProperty"/>.</remarks>
                    [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.WinUI.DependencyPropertyGenerator", <ASSEMBLY_VERSION>)]
                    partial void OnLastNameGet(ref string? propertyValue);

                    /// <summary>Executes the logic for when the <see langword="set"/> accessor <see cref="LastName"/> is invoked</summary>
                    /// <param name="propertyValue">The boxed property value that has been produced before assigning to <see cref="LastNameProperty"/>.</param>
                    /// <remarks>This method is invoked on the boxed value that is about to be passed to <see cref="SetValue"/> on <see cref="LastNameProperty"/>.</remarks>
                    [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.WinUI.DependencyPropertyGenerator", <ASSEMBLY_VERSION>)]
                    partial void OnLastNameSet(ref object? propertyValue);

                    /// <summary>Executes the logic for when the <see langword="set"/> accessor <see cref="LastName"/> is invoked</summary>
                    /// <param name="propertyValue">The property value that is being assigned to <see cref="LastName"/>.</param>
                    /// <remarks>This method is invoked on the raw value being assigned to <see cref="LastName"/>, before <see cref="SetValue"/> is used.</remarks>
                    [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.WinUI.DependencyPropertyGenerator", <ASSEMBLY_VERSION>)]
                    partial void OnLastNameSet(ref string? propertyValue);

                    /// <summary>Executes the logic for when <see cref="LastName"/> has just changed.</summary>
                    /// <param name="value">The new property value that has been set.</param>
                    /// <remarks>This method is invoked right after the value of <see cref="LastName"/> is changed.</remarks>
                    [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.WinUI.DependencyPropertyGenerator", <ASSEMBLY_VERSION>)]
                    partial void OnLastNameChanged(string? newValue);

                    /// <summary>Executes the logic for when <see cref="LastName"/> has just changed.</summary>
                    /// <param name="e">Event data that is issued by any event that tracks changes to the effective value of this property.</param>
                    /// <remarks>This method is invoked by the <see cref="global::Windows.UI.Xaml.DependencyProperty"/> infrastructure, after the value of <see cref="LastName"/> is changed.</remarks>
                    [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.WinUI.DependencyPropertyGenerator", <ASSEMBLY_VERSION>)]
                    partial void OnLastNamePropertyChanged(global::Windows.UI.Xaml.DependencyPropertyChangedEventArgs e);

                    /// <summary>Executes the logic for when any dependency property has just changed.</summary>
                    /// <param name="e">Event data that is issued by any event that tracks changes to the effective value of this property.</param>
                    /// <remarks>This method is invoked by the <see cref="global::Windows.UI.Xaml.DependencyProperty"/> infrastructure, after the value of any dependency property has just changed.</remarks>
                    [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.WinUI.DependencyPropertyGenerator", <ASSEMBLY_VERSION>)]
                    partial void OnPropertyChanged(global::Windows.UI.Xaml.DependencyPropertyChangedEventArgs e);
                }
            }
            """;

        CSharpGeneratorTest<DependencyPropertyGenerator>.VerifySources(source, ("MyNamespace.MyControl.g.cs", result), languageVersion: LanguageVersion.Preview);
    }

    [TestMethod]
    [DataRow("int")]
    [DataRow("object")]
    [DataRow("object?")]
    public void SingleProperty_Int32_WithNoCaching_WithDefaultValueCallback(string returnType)
    {
        string source = $$"""
            using Windows.UI.Xaml;
            using CommunityToolkit.WinUI;

            namespace MyNamespace;

            public partial class MyControl : DependencyObject
            {
                [GeneratedDependencyProperty(DefaultValueCallback = nameof(CreateNumber))]
                public partial int Number { get; set; }

                private static {{returnType}} CreateNumber() => 42;
            }
            """;

        string result = $$"""
            // <auto-generated/>
            #pragma warning disable
            #nullable enable

            namespace MyNamespace
            {
                /// <inheritdoc cref="MyControl"/>
                partial class MyControl
                {
                    /// <summary>
                    /// The backing <see cref="global::Windows.UI.Xaml.DependencyProperty"/> instance for <see cref="Number"/>.
                    /// </summary>
                    [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.WinUI.DependencyPropertyGenerator", <ASSEMBLY_VERSION>)]
                    public static readonly global::Windows.UI.Xaml.DependencyProperty NumberProperty = global::Windows.UI.Xaml.DependencyProperty.Register(
                        name: "Number",
                        propertyType: typeof(int),
                        ownerType: typeof(MyControl),
                        typeMetadata: global::Windows.UI.Xaml.PropertyMetadata.Create(
                            createDefaultValueCallback: new Windows.UI.Xaml.CreateDefaultValueCallback(CreateNumber)));

                    /// <inheritdoc/>
                    [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.WinUI.DependencyPropertyGenerator", <ASSEMBLY_VERSION>)]
                    [global::System.Diagnostics.DebuggerNonUserCode]
                    [global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
                    public partial int Number
                    {
                        get
                        {
                            object? __boxedValue = GetValue(NumberProperty);

                            OnNumberGet(ref __boxedValue);

                            int __unboxedValue = (int)__boxedValue;

                            OnNumberGet(ref __unboxedValue);

                            return __unboxedValue;
                        }
                        set
                        {
                            OnNumberSet(ref value);

                            object? __boxedValue = value;

                            OnNumberSet(ref __boxedValue);

                            SetValue(NumberProperty, __boxedValue);

                            OnNumberChanged(value);
                        }
                    }

                    /// <summary>Executes the logic for when the <see langword="get"/> accessor <see cref="Number"/> is invoked</summary>
                    /// <param name="propertyValue">The raw property value that has been retrieved from <see cref="NumberProperty"/>.</param>
                    /// <remarks>This method is invoked on the boxed value retrieved via <see cref="GetValue"/> on <see cref="NumberProperty"/>.</remarks>
                    [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.WinUI.DependencyPropertyGenerator", <ASSEMBLY_VERSION>)]
                    partial void OnNumberGet(ref object propertyValue);

                    /// <summary>Executes the logic for when the <see langword="get"/> accessor <see cref="Number"/> is invoked</summary>
                    /// <param name="propertyValue">The unboxed property value that has been retrieved from <see cref="NumberProperty"/>.</param>
                    /// <remarks>This method is invoked on the unboxed value retrieved via <see cref="GetValue"/> on <see cref="NumberProperty"/>.</remarks>
                    [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.WinUI.DependencyPropertyGenerator", <ASSEMBLY_VERSION>)]
                    partial void OnNumberGet(ref int propertyValue);

                    /// <summary>Executes the logic for when the <see langword="set"/> accessor <see cref="Number"/> is invoked</summary>
                    /// <param name="propertyValue">The boxed property value that has been produced before assigning to <see cref="NumberProperty"/>.</param>
                    /// <remarks>This method is invoked on the boxed value that is about to be passed to <see cref="SetValue"/> on <see cref="NumberProperty"/>.</remarks>
                    [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.WinUI.DependencyPropertyGenerator", <ASSEMBLY_VERSION>)]
                    partial void OnNumberSet(ref object propertyValue);

                    /// <summary>Executes the logic for when the <see langword="set"/> accessor <see cref="Number"/> is invoked</summary>
                    /// <param name="propertyValue">The property value that is being assigned to <see cref="Number"/>.</param>
                    /// <remarks>This method is invoked on the raw value being assigned to <see cref="Number"/>, before <see cref="SetValue"/> is used.</remarks>
                    [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.WinUI.DependencyPropertyGenerator", <ASSEMBLY_VERSION>)]
                    partial void OnNumberSet(ref int propertyValue);

                    /// <summary>Executes the logic for when <see cref="Number"/> has just changed.</summary>
                    /// <param name="value">The new property value that has been set.</param>
                    /// <remarks>This method is invoked right after the value of <see cref="Number"/> is changed.</remarks>
                    [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.WinUI.DependencyPropertyGenerator", <ASSEMBLY_VERSION>)]
                    partial void OnNumberChanged(int newValue);

                    /// <summary>Executes the logic for when <see cref="Number"/> has just changed.</summary>
                    /// <param name="e">Event data that is issued by any event that tracks changes to the effective value of this property.</param>
                    /// <remarks>This method is invoked by the <see cref="global::Windows.UI.Xaml.DependencyProperty"/> infrastructure, after the value of <see cref="Number"/> is changed.</remarks>
                    [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.WinUI.DependencyPropertyGenerator", <ASSEMBLY_VERSION>)]
                    partial void OnNumberPropertyChanged(global::Windows.UI.Xaml.DependencyPropertyChangedEventArgs e);

                    /// <summary>Executes the logic for when any dependency property has just changed.</summary>
                    /// <param name="e">Event data that is issued by any event that tracks changes to the effective value of this property.</param>
                    /// <remarks>This method is invoked by the <see cref="global::Windows.UI.Xaml.DependencyProperty"/> infrastructure, after the value of any dependency property has just changed.</remarks>
                    [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.WinUI.DependencyPropertyGenerator", <ASSEMBLY_VERSION>)]
                    partial void OnPropertyChanged(global::Windows.UI.Xaml.DependencyPropertyChangedEventArgs e);
                }
            }
            """;

        CSharpGeneratorTest<DependencyPropertyGenerator>.VerifySources(source, ("MyNamespace.MyControl.g.cs", result), languageVersion: LanguageVersion.CSharp13);
    }

    [TestMethod]
    [DataRow("int")]
    [DataRow("int?")]
    [DataRow("object")]
    [DataRow("object?")]
    public void SingleProperty_NullableOfInt32_WithNoCaching_WithDefaultValueCallback(string returnType)
    {
        string source = $$"""
            using Windows.UI.Xaml;
            using CommunityToolkit.WinUI;

            namespace MyNamespace;

            public partial class MyControl : DependencyObject
            {
                [GeneratedDependencyProperty(DefaultValueCallback = nameof(CreateNumber))]
                public partial int? Number { get; set; }

                private static {{returnType}} CreateNumber() => 42;
            }
            """;

        string result = $$"""
            // <auto-generated/>
            #pragma warning disable
            #nullable enable

            namespace MyNamespace
            {
                /// <inheritdoc cref="MyControl"/>
                partial class MyControl
                {
                    /// <summary>
                    /// The backing <see cref="global::Windows.UI.Xaml.DependencyProperty"/> instance for <see cref="Number"/>.
                    /// </summary>
                    [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.WinUI.DependencyPropertyGenerator", <ASSEMBLY_VERSION>)]
                    public static readonly global::Windows.UI.Xaml.DependencyProperty NumberProperty = global::Windows.UI.Xaml.DependencyProperty.Register(
                        name: "Number",
                        propertyType: typeof(int?),
                        ownerType: typeof(MyControl),
                        typeMetadata: global::Windows.UI.Xaml.PropertyMetadata.Create(
                            createDefaultValueCallback: new Windows.UI.Xaml.CreateDefaultValueCallback(CreateNumber)));

                    /// <inheritdoc/>
                    [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.WinUI.DependencyPropertyGenerator", <ASSEMBLY_VERSION>)]
                    [global::System.Diagnostics.DebuggerNonUserCode]
                    [global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
                    public partial int? Number
                    {
                        get
                        {
                            object? __boxedValue = GetValue(NumberProperty);

                            OnNumberGet(ref __boxedValue);

                            int? __unboxedValue = (int?)__boxedValue;

                            OnNumberGet(ref __unboxedValue);

                            return __unboxedValue;
                        }
                        set
                        {
                            OnNumberSet(ref value);

                            object? __boxedValue = value;

                            OnNumberSet(ref __boxedValue);

                            SetValue(NumberProperty, __boxedValue);

                            OnNumberChanged(value);
                        }
                    }

                    /// <summary>Executes the logic for when the <see langword="get"/> accessor <see cref="Number"/> is invoked</summary>
                    /// <param name="propertyValue">The raw property value that has been retrieved from <see cref="NumberProperty"/>.</param>
                    /// <remarks>This method is invoked on the boxed value retrieved via <see cref="GetValue"/> on <see cref="NumberProperty"/>.</remarks>
                    [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.WinUI.DependencyPropertyGenerator", <ASSEMBLY_VERSION>)]
                    partial void OnNumberGet(ref object? propertyValue);

                    /// <summary>Executes the logic for when the <see langword="get"/> accessor <see cref="Number"/> is invoked</summary>
                    /// <param name="propertyValue">The unboxed property value that has been retrieved from <see cref="NumberProperty"/>.</param>
                    /// <remarks>This method is invoked on the unboxed value retrieved via <see cref="GetValue"/> on <see cref="NumberProperty"/>.</remarks>
                    [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.WinUI.DependencyPropertyGenerator", <ASSEMBLY_VERSION>)]
                    partial void OnNumberGet(ref int? propertyValue);

                    /// <summary>Executes the logic for when the <see langword="set"/> accessor <see cref="Number"/> is invoked</summary>
                    /// <param name="propertyValue">The boxed property value that has been produced before assigning to <see cref="NumberProperty"/>.</param>
                    /// <remarks>This method is invoked on the boxed value that is about to be passed to <see cref="SetValue"/> on <see cref="NumberProperty"/>.</remarks>
                    [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.WinUI.DependencyPropertyGenerator", <ASSEMBLY_VERSION>)]
                    partial void OnNumberSet(ref object? propertyValue);

                    /// <summary>Executes the logic for when the <see langword="set"/> accessor <see cref="Number"/> is invoked</summary>
                    /// <param name="propertyValue">The property value that is being assigned to <see cref="Number"/>.</param>
                    /// <remarks>This method is invoked on the raw value being assigned to <see cref="Number"/>, before <see cref="SetValue"/> is used.</remarks>
                    [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.WinUI.DependencyPropertyGenerator", <ASSEMBLY_VERSION>)]
                    partial void OnNumberSet(ref int? propertyValue);

                    /// <summary>Executes the logic for when <see cref="Number"/> has just changed.</summary>
                    /// <param name="value">The new property value that has been set.</param>
                    /// <remarks>This method is invoked right after the value of <see cref="Number"/> is changed.</remarks>
                    [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.WinUI.DependencyPropertyGenerator", <ASSEMBLY_VERSION>)]
                    partial void OnNumberChanged(int? newValue);

                    /// <summary>Executes the logic for when <see cref="Number"/> has just changed.</summary>
                    /// <param name="e">Event data that is issued by any event that tracks changes to the effective value of this property.</param>
                    /// <remarks>This method is invoked by the <see cref="global::Windows.UI.Xaml.DependencyProperty"/> infrastructure, after the value of <see cref="Number"/> is changed.</remarks>
                    [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.WinUI.DependencyPropertyGenerator", <ASSEMBLY_VERSION>)]
                    partial void OnNumberPropertyChanged(global::Windows.UI.Xaml.DependencyPropertyChangedEventArgs e);

                    /// <summary>Executes the logic for when any dependency property has just changed.</summary>
                    /// <param name="e">Event data that is issued by any event that tracks changes to the effective value of this property.</param>
                    /// <remarks>This method is invoked by the <see cref="global::Windows.UI.Xaml.DependencyProperty"/> infrastructure, after the value of any dependency property has just changed.</remarks>
                    [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.WinUI.DependencyPropertyGenerator", <ASSEMBLY_VERSION>)]
                    partial void OnPropertyChanged(global::Windows.UI.Xaml.DependencyPropertyChangedEventArgs e);
                }
            }
            """;

        CSharpGeneratorTest<DependencyPropertyGenerator>.VerifySources(source, ("MyNamespace.MyControl.g.cs", result), languageVersion: LanguageVersion.CSharp13);
    }

    [TestMethod]
    [DataRow("string")]
    [DataRow("string?")]
    [DataRow("object")]
    [DataRow("object?")]
    public void SingleProperty_String_WithNoCaching_WithDefaultValueCallback(string returnType)
    {
        string source = $$"""
            using Windows.UI.Xaml;
            using CommunityToolkit.WinUI;

            #nullable enable

            namespace MyNamespace;

            public partial class MyControl : DependencyObject
            {
                [GeneratedDependencyProperty(DefaultValueCallback = nameof(CreateName))]
                public partial string? Name { get; set; }

                private static {{returnType}} CreateName() => "Bob";
            }
            """;

        const string result = """
            // <auto-generated/>
            #pragma warning disable
            #nullable enable

            namespace MyNamespace
            {
                /// <inheritdoc cref="MyControl"/>
                partial class MyControl
                {
                    /// <summary>
                    /// The backing <see cref="global::Windows.UI.Xaml.DependencyProperty"/> instance for <see cref="Name"/>.
                    /// </summary>
                    [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.WinUI.DependencyPropertyGenerator", <ASSEMBLY_VERSION>)]
                    public static readonly global::Windows.UI.Xaml.DependencyProperty NameProperty = global::Windows.UI.Xaml.DependencyProperty.Register(
                        name: "Name",
                        propertyType: typeof(string),
                        ownerType: typeof(MyControl),
                        typeMetadata: global::Windows.UI.Xaml.PropertyMetadata.Create(
                            createDefaultValueCallback: new Windows.UI.Xaml.CreateDefaultValueCallback(CreateName)));

                    /// <inheritdoc/>
                    [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.WinUI.DependencyPropertyGenerator", <ASSEMBLY_VERSION>)]
                    [global::System.Diagnostics.DebuggerNonUserCode]
                    [global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
                    public partial string? Name
                    {
                        get
                        {
                            object? __boxedValue = GetValue(NameProperty);

                            OnNameGet(ref __boxedValue);

                            string? __unboxedValue = (string?)__boxedValue;

                            OnNameGet(ref __unboxedValue);

                            return __unboxedValue;
                        }
                        set
                        {
                            OnNameSet(ref value);

                            object? __boxedValue = value;

                            OnNameSet(ref __boxedValue);

                            SetValue(NameProperty, __boxedValue);

                            OnNameChanged(value);
                        }
                    }

                    /// <summary>Executes the logic for when the <see langword="get"/> accessor <see cref="Name"/> is invoked</summary>
                    /// <param name="propertyValue">The raw property value that has been retrieved from <see cref="NameProperty"/>.</param>
                    /// <remarks>This method is invoked on the boxed value retrieved via <see cref="GetValue"/> on <see cref="NameProperty"/>.</remarks>
                    [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.WinUI.DependencyPropertyGenerator", <ASSEMBLY_VERSION>)]
                    partial void OnNameGet(ref object? propertyValue);

                    /// <summary>Executes the logic for when the <see langword="get"/> accessor <see cref="Name"/> is invoked</summary>
                    /// <param name="propertyValue">The unboxed property value that has been retrieved from <see cref="NameProperty"/>.</param>
                    /// <remarks>This method is invoked on the unboxed value retrieved via <see cref="GetValue"/> on <see cref="NameProperty"/>.</remarks>
                    [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.WinUI.DependencyPropertyGenerator", <ASSEMBLY_VERSION>)]
                    partial void OnNameGet(ref string? propertyValue);

                    /// <summary>Executes the logic for when the <see langword="set"/> accessor <see cref="Name"/> is invoked</summary>
                    /// <param name="propertyValue">The boxed property value that has been produced before assigning to <see cref="NameProperty"/>.</param>
                    /// <remarks>This method is invoked on the boxed value that is about to be passed to <see cref="SetValue"/> on <see cref="NameProperty"/>.</remarks>
                    [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.WinUI.DependencyPropertyGenerator", <ASSEMBLY_VERSION>)]
                    partial void OnNameSet(ref object? propertyValue);

                    /// <summary>Executes the logic for when the <see langword="set"/> accessor <see cref="Name"/> is invoked</summary>
                    /// <param name="propertyValue">The property value that is being assigned to <see cref="Name"/>.</param>
                    /// <remarks>This method is invoked on the raw value being assigned to <see cref="Name"/>, before <see cref="SetValue"/> is used.</remarks>
                    [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.WinUI.DependencyPropertyGenerator", <ASSEMBLY_VERSION>)]
                    partial void OnNameSet(ref string? propertyValue);

                    /// <summary>Executes the logic for when <see cref="Name"/> has just changed.</summary>
                    /// <param name="value">The new property value that has been set.</param>
                    /// <remarks>This method is invoked right after the value of <see cref="Name"/> is changed.</remarks>
                    [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.WinUI.DependencyPropertyGenerator", <ASSEMBLY_VERSION>)]
                    partial void OnNameChanged(string? newValue);

                    /// <summary>Executes the logic for when <see cref="Name"/> has just changed.</summary>
                    /// <param name="e">Event data that is issued by any event that tracks changes to the effective value of this property.</param>
                    /// <remarks>This method is invoked by the <see cref="global::Windows.UI.Xaml.DependencyProperty"/> infrastructure, after the value of <see cref="Name"/> is changed.</remarks>
                    [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.WinUI.DependencyPropertyGenerator", <ASSEMBLY_VERSION>)]
                    partial void OnNamePropertyChanged(global::Windows.UI.Xaml.DependencyPropertyChangedEventArgs e);

                    /// <summary>Executes the logic for when any dependency property has just changed.</summary>
                    /// <param name="e">Event data that is issued by any event that tracks changes to the effective value of this property.</param>
                    /// <remarks>This method is invoked by the <see cref="global::Windows.UI.Xaml.DependencyProperty"/> infrastructure, after the value of any dependency property has just changed.</remarks>
                    [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.WinUI.DependencyPropertyGenerator", <ASSEMBLY_VERSION>)]
                    partial void OnPropertyChanged(global::Windows.UI.Xaml.DependencyPropertyChangedEventArgs e);
                }
            }
            """;

        CSharpGeneratorTest<DependencyPropertyGenerator>.VerifySources(source, ("MyNamespace.MyControl.g.cs", result), languageVersion: LanguageVersion.CSharp13);
    }
}
