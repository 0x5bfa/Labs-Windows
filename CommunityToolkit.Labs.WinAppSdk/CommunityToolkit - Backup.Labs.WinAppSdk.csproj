<Project Sdk="Microsoft.NET.Sdk">
    <PropertyGroup>
        <RootNamepace>CommunityToolkit.Labs.WinAppSdk</RootNamepace>
        <ApplicationManifest>app.manifest</ApplicationManifest>
    </PropertyGroup>

    <PropertyGroup>
        <OutputType>WinExe</OutputType>
        <TargetPlatformMinVersion>10.0.17763.0</TargetPlatformMinVersion>
        <TargetFramework>net6.0-windows10.0.19041.0</TargetFramework>
        <Platforms>x86;x64;arm64</Platforms>
        <RuntimeIdentifiers>win10-x86;win10-x64;win10-arm64</RuntimeIdentifiers>
        <PublishProfile>win10-$(Platform).pubxml</PublishProfile>
        <UseWinUI>true</UseWinUI>
        <EnablePreviewMsixTooling>true</EnablePreviewMsixTooling>
        <DefineConstants>WINAPPSDK</DefineConstants>
      </PropertyGroup>

    <Import Project="../Common/Labs.WinAppSdk.props" />

    <ItemGroup>
      <ProjectReference Include="..\Labs\CanvasLayout\samples\CanvasLayout.Sample\CanvasLayout.Sample.csproj" />
    </ItemGroup>

    <ItemGroup>
      <Manifest Include="$(ApplicationManifest)" />
    </ItemGroup>

    <!-- Defining the "Msix" ProjectCapability here allows the Single-project MSIX Packaging
         Tools extension to be activated for this project even if the Windows App SDK Nuget
         package has not yet been restored -->
    <ItemGroup Condition="'$(DisableMsixProjectCapabilityAddedByProject)'!='true' and '$(EnablePreviewMsixTooling)'=='true'">
      <ProjectCapability Include="Msix"/>
    </ItemGroup>

    <ItemGroup>
      <ProjectReference Include="$(RepositoryDirectory)\Common\CommunityToolkit.Labs.Core\CommunityToolkit.Labs.Core.csproj">
        <Project>{210476d6-42cc-4d01-b027-478145bea8fe}</Project>
        <Name>CommunityToolkit.Labs.Core</Name>
      </ProjectReference>
    </ItemGroup>
</Project>